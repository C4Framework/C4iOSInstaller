<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/C4GL.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/C4GL</TokenIdentifier>
			<Abstract type="html">The C4GL class implements a modifiable view that handles OpenGL ES rendering.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4GL/glWithFrame:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new C4GL object with a specified frame.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>+ (C4GL *)glWithFrame:(CGRect)frame</Declaration>
			<Parameters>
				<Parameter>
					<Name>frame</Name>
					<Abstract type="html">the frame for building the new C4GL object&apos;s view.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a new C4GL object.</Abstract></ReturnValue>
			<Anchor>//api/name/glWithFrame:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/initWithRenderer:</TokenIdentifier>
			<Abstract type="html">Initializes a C4GL object with a specific renderer.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>- (id)initWithRenderer:(id&lt;C4EAGLESRenderer&gt;)renderer</Declaration>
			<Parameters>
				<Parameter>
					<Name>renderer</Name>
					<Abstract type="html">A rendering object which conforms to the C4EAGLESRenderer protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithRenderer:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/startAnimation</TokenIdentifier>
			<Abstract type="html">Starts rendering</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>- (void)startAnimation</Declaration>
			
			
			<Anchor>//api/name/startAnimation</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/stopAnimation</TokenIdentifier>
			<Abstract type="html">Stops rendering.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>- (void)stopAnimation</Declaration>
			
			
			<Anchor>//api/name/stopAnimation</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/setRenderer:</TokenIdentifier>
			<Abstract type="html">Specifies the renderer to be used for drawing.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, nonatomic) id&lt;C4EAGLESRenderer&gt; renderer</Declaration>
			
			
			<Anchor>//api/name/renderer</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/renderer</TokenIdentifier>
			<Abstract type="html">Specifies the renderer to be used for drawing.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, nonatomic) id&lt;C4EAGLESRenderer&gt; renderer</Declaration>
			
			
			<Anchor>//api/name/renderer</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4GL/renderer</TokenIdentifier>
			<Abstract type="html">Specifies the renderer to be used for drawing.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, nonatomic) id&lt;C4EAGLESRenderer&gt; renderer</Declaration>
			
			
			<Anchor>//api/name/renderer</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/setAnimating:</TokenIdentifier>
			<Abstract type="html">Specifies a readonly variable used to determine if the renderer is currently animating.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isAnimating) BOOL animating</Declaration>
			
			
			<Anchor>//api/name/animating</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/isAnimating</TokenIdentifier>
			<Abstract type="html">Specifies a readonly variable used to determine if the renderer is currently animating.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isAnimating) BOOL animating</Declaration>
			
			
			<Anchor>//api/name/animating</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4GL/animating</TokenIdentifier>
			<Abstract type="html">Specifies a readonly variable used to determine if the renderer is currently animating.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isAnimating) BOOL animating</Declaration>
			
			
			<Anchor>//api/name/animating</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/setAnimationFrameInterval:</TokenIdentifier>
			<Abstract type="html">Specifies an interval which determines how often frames are rendered.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSInteger animationFrameInterval</Declaration>
			
			
			<Anchor>//api/name/animationFrameInterval</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/animationFrameInterval</TokenIdentifier>
			<Abstract type="html">Specifies an interval which determines how often frames are rendered.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSInteger animationFrameInterval</Declaration>
			
			
			<Anchor>//api/name/animationFrameInterval</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4GL/animationFrameInterval</TokenIdentifier>
			<Abstract type="html">Specifies an interval which determines how often frames are rendered.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSInteger animationFrameInterval</Declaration>
			
			
			<Anchor>//api/name/animationFrameInterval</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/setDrawOnce:</TokenIdentifier>
			<Abstract type="html">Specifies that drawing should happen only one time.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL drawOnce</Declaration>
			
			
			<Anchor>//api/name/drawOnce</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/drawOnce</TokenIdentifier>
			<Abstract type="html">Specifies that drawing should happen only one time.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL drawOnce</Declaration>
			
			
			<Anchor>//api/name/drawOnce</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4GL/drawOnce</TokenIdentifier>
			<Abstract type="html">Specifies that drawing should happen only one time.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL drawOnce</Declaration>
			
			
			<Anchor>//api/name/drawOnce</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4GL/copyWithZone:</TokenIdentifier>
			<Abstract type="html">Creates a copy of the receiver.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>- (C4GL *)copyWithZone:(NSZone *)zone</Declaration>
			<Parameters>
				<Parameter>
					<Name>zone</Name>
					<Abstract type="html">The zone for copying. Leave this as nil for normal results.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a copy of the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/copyWithZone:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4GL/defaultStyle</TokenIdentifier>
			<Abstract type="html">Returns the appearance proxy for the object, cast as a C4GL rather than the standard (id) cast provided by UIAppearance.</Abstract>
			<DeclaredIn>C4GL.h</DeclaredIn>			
			
			<Declaration>+ (C4GL *)defaultStyle</Declaration>
			
			<ReturnValue><Abstract type="html">The appearance proxy for the receiver, cast as a C4GL.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultStyle</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
	</File>
</Tokens>