<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/C4Movie.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/C4Movie</TokenIdentifier>
			<Abstract type="html">This document describes the C4Movie class. You use an C4Movie object to implement the playback of video files, it encapulates an AVPlayer object which handles the loading and control of assets.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>
			
			<NodeRef refid="20"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Movie/movieNamed:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new C4Movie object with a given file name.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>+ (C4Movie *)movieNamed:(NSString *)movieName</Declaration>
			<Parameters>
				<Parameter>
					<Name>movieName</Name>
					<Abstract type="html">The filename of a video located in the application&apos;s main bundle.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/movieNamed:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Movie/movieNamed:inFrame:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new C4Movie object with a given file name and frame.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>+ (C4Movie *)movieNamed:(NSString *)movieName inFrame:(CGRect)movieFrame</Declaration>
			<Parameters>
				<Parameter>
					<Name>movieName</Name>
					<Abstract type="html">The filename of a video located in the application&apos;s main bundle.</Abstract>
				</Parameter><Parameter>
					<Name>movieFrame</Name>
					<Abstract type="html">The frame for the new movie</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/movieNamed:inFrame:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/initWithMovieName:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Movie object with a given file name.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (id)initWithMovieName:(NSString *)movieName</Declaration>
			<Parameters>
				<Parameter>
					<Name>movieName</Name>
					<Abstract type="html">The filename of a video located in the application&apos;s main bundle.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithMovieName:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/initWithMovieName:frame:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Movie object with a given file name and frame.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (id)initWithMovieName:(NSString *)movieName frame:(CGRect)movieFrame</Declaration>
			<Parameters>
				<Parameter>
					<Name>movieName</Name>
					<Abstract type="html">The filename of a video located in the application&apos;s main bundle.</Abstract>
				</Parameter><Parameter>
					<Name>movieFrame</Name>
					<Abstract type="html">The frame for the new movie</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithMovieName:frame:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/play</TokenIdentifier>
			<Abstract type="html">Starts playing the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (void)play</Declaration>
			
			
			<Anchor>//api/name/play</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/pause</TokenIdentifier>
			<Abstract type="html">Pauses the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (void)pause</Declaration>
			
			
			<Anchor>//api/name/pause</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/duration</TokenIdentifier>
			<Abstract type="html">The duration of the movie, in seconds.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (CGFloat)duration</Declaration>
			
			
			<Anchor>//api/name/duration</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/currentTime</TokenIdentifier>
			<Abstract type="html">The current time of the movie, in seconds.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (CGFloat)currentTime</Declaration>
			
			
			<Anchor>//api/name/currentTime</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/seekToTime:</TokenIdentifier>
			<Abstract type="html">Will jump the movie to a specific time, in seconds.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (void)seekToTime:(CGFloat)time</Declaration>
			<Parameters>
				<Parameter>
					<Name>time</Name>
					<Abstract type="html">A specific time to which the playhead will jump.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/seekToTime:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/seekByAddingTime:</TokenIdentifier>
			<Abstract type="html">Will jump the movie forwards or backwards by the given amount of time.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (void)seekByAddingTime:(CGFloat)time</Declaration>
			<Parameters>
				<Parameter>
					<Name>time</Name>
					<Abstract type="html">The amount of time to move forwards or backwards. Can have a + or - value.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/seekByAddingTime:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/reachedEnd</TokenIdentifier>
			<Abstract type="html">Method called when the movie reaches its end.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (void)reachedEnd</Declaration>
			
			
			<Anchor>//api/name/reachedEnd</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/currentTimeChanged</TokenIdentifier>
			<Abstract type="html">Method called when the movie&apos;s time changes.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (void)currentTimeChanged</Declaration>
			
			
			<Anchor>//api/name/currentTimeChanged</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setOriginalMovieSize:</TokenIdentifier>
			<Abstract type="html">The original size of the movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGSize originalMovieSize</Declaration>
			
			
			<Anchor>//api/name/originalMovieSize</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/originalMovieSize</TokenIdentifier>
			<Abstract type="html">The original size of the movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGSize originalMovieSize</Declaration>
			
			
			<Anchor>//api/name/originalMovieSize</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/originalMovieSize</TokenIdentifier>
			<Abstract type="html">The original size of the movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGSize originalMovieSize</Declaration>
			
			
			<Anchor>//api/name/originalMovieSize</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setOriginalMovieRatio:</TokenIdentifier>
			<Abstract type="html">The original ratio of the movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGFloat originalMovieRatio</Declaration>
			
			
			<Anchor>//api/name/originalMovieRatio</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/originalMovieRatio</TokenIdentifier>
			<Abstract type="html">The original ratio of the movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGFloat originalMovieRatio</Declaration>
			
			
			<Anchor>//api/name/originalMovieRatio</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/originalMovieRatio</TokenIdentifier>
			<Abstract type="html">The original ratio of the movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGFloat originalMovieRatio</Declaration>
			
			
			<Anchor>//api/name/originalMovieRatio</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setRate:</TokenIdentifier>
			<Abstract type="html">The rate at which the movie will play.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat rate</Declaration>
			
			
			<Anchor>//api/name/rate</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/rate</TokenIdentifier>
			<Abstract type="html">The rate at which the movie will play.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat rate</Declaration>
			
			
			<Anchor>//api/name/rate</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/rate</TokenIdentifier>
			<Abstract type="html">The rate at which the movie will play.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat rate</Declaration>
			
			
			<Anchor>//api/name/rate</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setWidth:</TokenIdentifier>
			<Abstract type="html">The width of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/width</TokenIdentifier>
			<Abstract type="html">The width of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/width</TokenIdentifier>
			<Abstract type="html">The width of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setHeight:</TokenIdentifier>
			<Abstract type="html">The height of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGFloat height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/height</TokenIdentifier>
			<Abstract type="html">The height of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGFloat height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/height</TokenIdentifier>
			<Abstract type="html">The height of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGFloat height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setIsPlaying:</TokenIdentifier>
			<Abstract type="html">Specifies whether the movie is playing or not.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) BOOL isPlaying</Declaration>
			
			
			<Anchor>//api/name/isPlaying</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/isPlaying</TokenIdentifier>
			<Abstract type="html">Specifies whether the movie is playing or not.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) BOOL isPlaying</Declaration>
			
			
			<Anchor>//api/name/isPlaying</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/isPlaying</TokenIdentifier>
			<Abstract type="html">Specifies whether the movie is playing or not.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) BOOL isPlaying</Declaration>
			
			
			<Anchor>//api/name/isPlaying</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setLoops:</TokenIdentifier>
			<Abstract type="html">Specifies whether the movie will loop or not.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL loops</Declaration>
			
			
			<Anchor>//api/name/loops</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/loops</TokenIdentifier>
			<Abstract type="html">Specifies whether the movie will loop or not.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL loops</Declaration>
			
			
			<Anchor>//api/name/loops</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/loops</TokenIdentifier>
			<Abstract type="html">Specifies whether the movie will loop or not.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL loops</Declaration>
			
			
			<Anchor>//api/name/loops</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setShouldAutoplay:</TokenIdentifier>
			<Abstract type="html">Specifies whether the movies should play automatically after being loaded into the view.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL shouldAutoplay</Declaration>
			
			
			<Anchor>//api/name/shouldAutoplay</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/shouldAutoplay</TokenIdentifier>
			<Abstract type="html">Specifies whether the movies should play automatically after being loaded into the view.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL shouldAutoplay</Declaration>
			
			
			<Anchor>//api/name/shouldAutoplay</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/shouldAutoplay</TokenIdentifier>
			<Abstract type="html">Specifies whether the movies should play automatically after being loaded into the view.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (atomic) BOOL shouldAutoplay</Declaration>
			
			
			<Anchor>//api/name/shouldAutoplay</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setAudioMix:</TokenIdentifier>
			<Abstract type="html">Specifies the audio mix for the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) AVMutableAudioMix *audioMix</Declaration>
			
			
			<Anchor>//api/name/audioMix</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/audioMix</TokenIdentifier>
			<Abstract type="html">Specifies the audio mix for the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) AVMutableAudioMix *audioMix</Declaration>
			
			
			<Anchor>//api/name/audioMix</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/audioMix</TokenIdentifier>
			<Abstract type="html">Specifies the audio mix for the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) AVMutableAudioMix *audioMix</Declaration>
			
			
			<Anchor>//api/name/audioMix</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setVolume:</TokenIdentifier>
			<Abstract type="html">Specifies the volume of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat volume</Declaration>
			
			
			<Anchor>//api/name/volume</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/volume</TokenIdentifier>
			<Abstract type="html">Specifies the volume of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat volume</Declaration>
			
			
			<Anchor>//api/name/volume</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/volume</TokenIdentifier>
			<Abstract type="html">Specifies the volume of the movie.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat volume</Declaration>
			
			
			<Anchor>//api/name/volume</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setSize:</TokenIdentifier>
			<Abstract type="html">Specifies the size of the movie. Animatable.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/size</TokenIdentifier>
			<Abstract type="html">Specifies the size of the movie. Animatable.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/size</TokenIdentifier>
			<Abstract type="html">Specifies the size of the movie. Animatable.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Movie/movieWithURL:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new C4Movie object with a given URL pointing to a movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>+ (C4Movie *)movieWithURL:(NSString *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The NSURL for a given movie file. The URL can access files directly from the device, or it can also access movies from the internet (i.e. http, etc.)</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Movie object created or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/movieWithURL:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Movie/movieWithURL:frame:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new C4Movie object with a given URL pointing to a movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>+ (C4Movie *)movieWithURL:(NSString *)url frame:(CGRect)movieFrame</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The NSURL for a given movie file. The URL can access files directly from the device, or it can also access movies from the internet (i.e. http, etc.)</Abstract>
				</Parameter><Parameter>
					<Name>movieFrame</Name>
					<Abstract type="html">The frame for the new movie</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Movie object created or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/movieWithURL:frame:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/initWithURL:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Movie object with a given URL pointing to a movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (id)initWithURL:(NSURL *)movieURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>movieURL</Name>
					<Abstract type="html">The NSURL for a given movie file. The URL can access files directly from the device, or it can also access movies from the internet (i.e. http, etc.)</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Movie object created or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithURL:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/initWithURL:frame:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Movie object with a given URL pointing to a movie file.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>- (id)initWithURL:(NSURL *)movieURL frame:(CGRect)movieFrame</Declaration>
			<Parameters>
				<Parameter>
					<Name>movieURL</Name>
					<Abstract type="html">The NSURL for a given movie file. The URL can access files directly from the device, or it can also access movies from the internet (i.e. http, etc.)</Abstract>
				</Parameter><Parameter>
					<Name>movieFrame</Name>
					<Abstract type="html">The frame for the new movie</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Movie object created or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithURL:frame:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/setConstrainsProportions:</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the movie will maintain its visual proportions when either of its width or height properties are changed.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) BOOL constrainsProportions</Declaration>
			
			
			<Anchor>//api/name/constrainsProportions</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Movie/constrainsProportions</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the movie will maintain its visual proportions when either of its width or height properties are changed.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) BOOL constrainsProportions</Declaration>
			
			
			<Anchor>//api/name/constrainsProportions</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Movie/constrainsProportions</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the movie will maintain its visual proportions when either of its width or height properties are changed.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) BOOL constrainsProportions</Declaration>
			
			
			<Anchor>//api/name/constrainsProportions</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Movie/defaultStyle</TokenIdentifier>
			<Abstract type="html">Returns the appearance proxy for the object, cast as a C4Movie rather than the standard (id) cast provided by UIAppearance.</Abstract>
			<DeclaredIn>C4Movie.h</DeclaredIn>			
			
			<Declaration>+ (C4Movie *)defaultStyle</Declaration>
			
			<ReturnValue><Abstract type="html">The appearance proxy for the receiver, cast as a C4Movie.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultStyle</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
	</File>
</Tokens>