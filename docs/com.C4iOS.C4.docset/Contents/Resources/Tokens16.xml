<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/C4Image.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/C4Image</TokenIdentifier>
			<Abstract type="html">This document describes the C4Image class. A C4Image object provides access for creating, showing, interacting and manipulating images. C4Image is a subclass of C4Control and so inherits its animation, gesture and notification abilities.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/imageNamed:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new image using a file with the given name.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)imageNamed:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">A string representation of the file name (e.g. photo.jpg, image.png, etc.)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/imageNamed:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/imageWithImage:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new image using a pre-existing C4Image object.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)imageWithImage:(C4Image *)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">A C4Image whose contents will be used to create a new C4Image object.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/imageWithImage:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/imageWithData:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new image using an NSData object.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)imageWithData:(NSData *)imageData</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageData</Name>
					<Abstract type="html">An NSData object.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/imageWithData:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/imageWithUIImage:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new image using an UIImage object.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)imageWithUIImage:(UIImage *)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">a UIImage used to create the C4Image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/imageWithUIImage:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/imageWithURL:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new image using an URL.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)imageWithURL:(NSString *)imageURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageURL</Name>
					<Abstract type="html">the URL for the file used to create the image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/imageWithURL:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/animatedImageWithNames:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new animated image from an array of image file names.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)animatedImageWithNames:(NSArray *)imageNames</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageNames</Name>
					<Abstract type="html">An NSArray of image names (e.g. C4Sky, C4Table@2x.png, etc.) used to construct the images for the animation.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a new animatable image.</Abstract></ReturnValue>
			<Anchor>//api/name/animatedImageWithNames:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initWithImageName:</TokenIdentifier>
			<Abstract type="html">Initializes an image using a file with the given name.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initWithImageName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">A string representation of the file name (e.g. photo.jpg, image.png, etc.)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithImageName:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initWithImage:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Image using the contents of another C4Image</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initWithImage:(C4Image *)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">A C4Image whose contents will be used to create a new C4Image object.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithImage:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initWithData:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Image using an NSData object</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initWithData:(NSData *)imageData</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageData</Name>
					<Abstract type="html">an NSData object</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithData:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initWithRawData:width:height:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Image using an array of raw data.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initWithRawData:(unsigned char *)data width:(NSInteger)width height:(NSInteger)height</Declaration>
			<Parameters>
				<Parameter>
					<Name>data</Name>
					<Abstract type="html">An unsigned char data array of values</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width of the image to create</Abstract>
				</Parameter><Parameter>
					<Name>height</Name>
					<Abstract type="html">The height of the image to create</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithRawData:width:height:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initWithCGImage:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Image using a CGImageRef object</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initWithCGImage:(CGImageRef)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">A CGImageRef whose contents will be used to create a new C4Image object.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithCGImage:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initWithUIImage:</TokenIdentifier>
			<Abstract type="html">Initializes a C4Image using a UIImage object</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initWithUIImage:(UIImage *)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">A UIImage whose contents will be used to create a new C4Image object.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithUIImage:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initWithURL:</TokenIdentifier>
			<Abstract type="html">Initializes and returns a new image using an URL.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initWithURL:(NSURL *)imageURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageURL</Name>
					<Abstract type="html">the URL for the file used to create the image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithURL:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/initAnimatedImageWithNames:</TokenIdentifier>
			<Abstract type="html">Initializes and returns a new animated image from an array of image file names.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (id)initAnimatedImageWithNames:(NSArray *)imageNames</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageNames</Name>
					<Abstract type="html">An NSArray of image names (e.g. C4Sky, C4Table@2x.png, etc.) used to construct the images for the animation.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a new animatable image.</Abstract></ReturnValue>
			<Anchor>//api/name/initAnimatedImageWithNames:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setAnimationImages:</TokenIdentifier>
			<Abstract type="html">Specifies the array of images used for animating.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) NSArray *animationImages</Declaration>
			
			
			<Anchor>//api/name/animationImages</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/animationImages</TokenIdentifier>
			<Abstract type="html">Specifies the array of images used for animating.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) NSArray *animationImages</Declaration>
			
			
			<Anchor>//api/name/animationImages</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/animationImages</TokenIdentifier>
			<Abstract type="html">Specifies the array of images used for animating.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) NSArray *animationImages</Declaration>
			
			
			<Anchor>//api/name/animationImages</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setAnimatedImageDuration:</TokenIdentifier>
			<Abstract type="html">Specifies the duration for the entire animation.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat animatedImageDuration</Declaration>
			
			
			<Anchor>//api/name/animatedImageDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/animatedImageDuration</TokenIdentifier>
			<Abstract type="html">Specifies the duration for the entire animation.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat animatedImageDuration</Declaration>
			
			
			<Anchor>//api/name/animatedImageDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/animatedImageDuration</TokenIdentifier>
			<Abstract type="html">Specifies the duration for the entire animation.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat animatedImageDuration</Declaration>
			
			
			<Anchor>//api/name/animatedImageDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setAnimationRepeatCount:</TokenIdentifier>
			<Abstract type="html">Specifies the number of times to repeat the animation.
The default value is 0, which specifies to repeat the animation indefinitely.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) NSInteger animationRepeatCount</Declaration>
			
			
			<Anchor>//api/name/animationRepeatCount</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/animationRepeatCount</TokenIdentifier>
			<Abstract type="html">Specifies the number of times to repeat the animation.
The default value is 0, which specifies to repeat the animation indefinitely.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) NSInteger animationRepeatCount</Declaration>
			
			
			<Anchor>//api/name/animationRepeatCount</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/animationRepeatCount</TokenIdentifier>
			<Abstract type="html">Specifies the number of times to repeat the animation.
The default value is 0, which specifies to repeat the animation indefinitely.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) NSInteger animationRepeatCount</Declaration>
			
			
			<Anchor>//api/name/animationRepeatCount</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/play</TokenIdentifier>
			<Abstract type="html">Starts animating the images in the receiver.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)play</Declaration>
			
			
			<Anchor>//api/name/play</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/pause</TokenIdentifier>
			<Abstract type="html">Stops animating the images in the receiver.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)pause</Declaration>
			
			
			<Anchor>//api/name/pause</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setAnimating:</TokenIdentifier>
			<Abstract type="html">Returns a Boolean value indicating whether the animation is running.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isAnimating) BOOL animating</Declaration>
			
			
			<Anchor>//api/name/animating</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/isAnimating</TokenIdentifier>
			<Abstract type="html">Returns a Boolean value indicating whether the animation is running.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isAnimating) BOOL animating</Declaration>
			
			
			<Anchor>//api/name/animating</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/animating</TokenIdentifier>
			<Abstract type="html">Returns a Boolean value indicating whether the animation is running.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isAnimating) BOOL animating</Declaration>
			
			
			<Anchor>//api/name/animating</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setImage:</TokenIdentifier>
			<Abstract type="html">Sets the current visible representation of a C4Image to that of another image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)setImage:(C4Image *)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">A C4Image whose contents will be used to set the visible representation of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImage:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/loadPixelData</TokenIdentifier>
			<Abstract type="html">Loads a raw character array with color data.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)loadPixelData</Declaration>
			
			
			<Anchor>//api/name/loadPixelData</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorAt:</TokenIdentifier>
			<Abstract type="html">Creates and returns a UIColor object from the specified coordinate in the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (UIColor *)colorAt:(CGPoint)point</Declaration>
			<Parameters>
				<Parameter>
					<Name>point</Name>
					<Abstract type="html">The coordinate in the image from which to pull color values</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorAt:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/rgbVectorAt:</TokenIdentifier>
			<Abstract type="html">Creates and returns a C4Vector object containing 4 points mapping to the RGBA value from the specified coordinate in the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (C4Vector *)rgbVectorAt:(CGPoint)point</Declaration>
			<Parameters>
				<Parameter>
					<Name>point</Name>
					<Abstract type="html">The coordinate in the image from which to pull color values</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/rgbVectorAt:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setUIImage:</TokenIdentifier>
			<Abstract type="html">The image displayed in the image view.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) *UIImage</Declaration>
			
			
			<Anchor>//api/name/UIImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/UIImage</TokenIdentifier>
			<Abstract type="html">The image displayed in the image view.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) *UIImage</Declaration>
			
			
			<Anchor>//api/name/UIImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/UIImage</TokenIdentifier>
			<Abstract type="html">The image displayed in the image view.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) *UIImage</Declaration>
			
			
			<Anchor>//api/name/UIImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setCIImage:</TokenIdentifier>
			<Abstract type="html">Returns a Core Image representation of the current image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) *CIImage</Declaration>
			
			
			<Anchor>//api/name/CIImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/CIImage</TokenIdentifier>
			<Abstract type="html">Returns a Core Image representation of the current image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) *CIImage</Declaration>
			
			
			<Anchor>//api/name/CIImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/CIImage</TokenIdentifier>
			<Abstract type="html">Returns a Core Image representation of the current image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) *CIImage</Declaration>
			
			
			<Anchor>//api/name/CIImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setCGImage:</TokenIdentifier>
			<Abstract type="html">The underlying Core Image data. (read-only)</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGImageRef CGImage</Declaration>
			
			
			<Anchor>//api/name/CGImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/CGImage</TokenIdentifier>
			<Abstract type="html">The underlying Core Image data. (read-only)</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGImageRef CGImage</Declaration>
			
			
			<Anchor>//api/name/CGImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/CGImage</TokenIdentifier>
			<Abstract type="html">The underlying Core Image data. (read-only)</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGImageRef CGImage</Declaration>
			
			
			<Anchor>//api/name/CGImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setHeight:</TokenIdentifier>
			<Abstract type="html">Specifies the height of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/height</TokenIdentifier>
			<Abstract type="html">Specifies the height of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/height</TokenIdentifier>
			<Abstract type="html">Specifies the height of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setWidth:</TokenIdentifier>
			<Abstract type="html">Specifies the width of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/width</TokenIdentifier>
			<Abstract type="html">Specifies the width of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/width</TokenIdentifier>
			<Abstract type="html">Specifies the width of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setSize:</TokenIdentifier>
			<Abstract type="html">Specifies the size of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/size</TokenIdentifier>
			<Abstract type="html">Specifies the size of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/size</TokenIdentifier>
			<Abstract type="html">Specifies the size of the image. Animatable.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setOriginalSize:</TokenIdentifier>
			<Abstract type="html">Specifies the original size of the of the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/originalSize</TokenIdentifier>
			<Abstract type="html">Specifies the original size of the of the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/originalSize</TokenIdentifier>
			<Abstract type="html">Specifies the original size of the of the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setOriginalRatio:</TokenIdentifier>
			<Abstract type="html">Specifies the original ratio (width / height of the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGFloat originalRatio</Declaration>
			
			
			<Anchor>//api/name/originalRatio</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/originalRatio</TokenIdentifier>
			<Abstract type="html">Specifies the original ratio (width / height of the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGFloat originalRatio</Declaration>
			
			
			<Anchor>//api/name/originalRatio</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/originalRatio</TokenIdentifier>
			<Abstract type="html">Specifies the original ratio (width / height of the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) CGFloat originalRatio</Declaration>
			
			
			<Anchor>//api/name/originalRatio</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setPixelDataLoaded:</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the image has loaded its pixel data.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) BOOL pixelDataLoaded</Declaration>
			
			
			<Anchor>//api/name/pixelDataLoaded</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/pixelDataLoaded</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the image has loaded its pixel data.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) BOOL pixelDataLoaded</Declaration>
			
			
			<Anchor>//api/name/pixelDataLoaded</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/pixelDataLoaded</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the image has loaded its pixel data.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) BOOL pixelDataLoaded</Declaration>
			
			
			<Anchor>//api/name/pixelDataLoaded</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setConstrainsProportions:</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the image will maintain its current proportions when scaling either its width or height values.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) BOOL constrainsProportions</Declaration>
			
			
			<Anchor>//api/name/constrainsProportions</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/constrainsProportions</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the image will maintain its current proportions when scaling either its width or height values.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) BOOL constrainsProportions</Declaration>
			
			
			<Anchor>//api/name/constrainsProportions</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/constrainsProportions</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the image will maintain its current proportions when scaling either its width or height values.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, atomic) BOOL constrainsProportions</Declaration>
			
			
			<Anchor>//api/name/constrainsProportions</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setContents:</TokenIdentifier>
			<Abstract type="html">The contets of the image&apos;s layer (i.e. the visible image as a CGImageRef).</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGImageRef contents</Declaration>
			
			
			<Anchor>//api/name/contents</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/contents</TokenIdentifier>
			<Abstract type="html">The contets of the image&apos;s layer (i.e. the visible image as a CGImageRef).</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGImageRef contents</Declaration>
			
			
			<Anchor>//api/name/contents</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/contents</TokenIdentifier>
			<Abstract type="html">The contets of the image&apos;s layer (i.e. the visible image as a CGImageRef).</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGImageRef contents</Declaration>
			
			
			<Anchor>//api/name/contents</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/availableFilters</TokenIdentifier>
			<Abstract type="html">A list of all availble filters using the CI prefix.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (NSArray *)availableFilters</Declaration>
			
			<ReturnValue><Abstract type="html">An array of available filters, by name.</Abstract></ReturnValue>
			<Anchor>//api/name/availableFilters</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setMultipleFilterEnabled:</TokenIdentifier>
			<Abstract type="html">Specifies whether or not an image will process one or many filters at a time.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isMultipleFilterEnabled) BOOL multipleFilterEnabled</Declaration>
			
			
			<Anchor>//api/name/multipleFilterEnabled</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/isMultipleFilterEnabled</TokenIdentifier>
			<Abstract type="html">Specifies whether or not an image will process one or many filters at a time.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isMultipleFilterEnabled) BOOL multipleFilterEnabled</Declaration>
			
			
			<Anchor>//api/name/multipleFilterEnabled</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/multipleFilterEnabled</TokenIdentifier>
			<Abstract type="html">Specifies whether or not an image will process one or many filters at a time.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isMultipleFilterEnabled) BOOL multipleFilterEnabled</Declaration>
			
			
			<Anchor>//api/name/multipleFilterEnabled</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/startFiltering</TokenIdentifier>
			<Abstract type="html">Sets the receiver to allow multiple filters before rendering.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)startFiltering</Declaration>
			
			
			<Anchor>//api/name/startFiltering</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/renderFilteredImage</TokenIdentifier>
			<Abstract type="html">Renders the current image&apos;s filter stack.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)renderFilteredImage</Declaration>
			
			
			<Anchor>//api/name/renderFilteredImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/setShowsActivityIndicator:</TokenIdentifier>
			<Abstract type="html">Specifies whether the activity indicator for this image should show.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) BOOL showsActivityIndicator</Declaration>
			
			
			<Anchor>//api/name/showsActivityIndicator</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/showsActivityIndicator</TokenIdentifier>
			<Abstract type="html">Specifies whether the activity indicator for this image should show.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) BOOL showsActivityIndicator</Declaration>
			
			
			<Anchor>//api/name/showsActivityIndicator</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Image/showsActivityIndicator</TokenIdentifier>
			<Abstract type="html">Specifies whether the activity indicator for this image should show.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) BOOL showsActivityIndicator</Declaration>
			
			
			<Anchor>//api/name/showsActivityIndicator</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/boxBlur:</TokenIdentifier>
			<Abstract type="html">Blurs an image using a box-shaped convolution kernel.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)boxBlur:(CGFloat)radius</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">a CGFloat representing the length of the radius for the blur. Default value: 10.00</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/boxBlur:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/discBlur:</TokenIdentifier>
			<Abstract type="html">Blurs an image using a disc-shaped convolution kernel.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)discBlur:(CGFloat)radius</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">a CGFloat representing the length of the radius for the blur. Default value: 8.00</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/discBlur:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/gaussianBlur:</TokenIdentifier>
			<Abstract type="html">Spreads source pixels by an amount specified by a Gaussian distribution.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)gaussianBlur:(CGFloat)radius</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">a CGFloat representing the length of the radius for the blur. Default value: 10.00</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gaussianBlur:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/medianFilter</TokenIdentifier>
			<Abstract type="html">Computes the median value for a group of neighboring pixels and replaces each pixel value with the median.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)medianFilter</Declaration>
			
			
			<Anchor>//api/name/medianFilter</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/motionBlur:angle:</TokenIdentifier>
			<Abstract type="html">Blurs an image to simulate the effect of using a camera that moves a specified angle and distance while capturing the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)motionBlur:(CGFloat)radius angle:(CGFloat)angle</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">a CGFloat representing the length of the radius for the blur. Default value: 20.00</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">a CGFloat representing the angle of the blur (in radians).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/motionBlur:angle:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/noiseRedution:sharpness:</TokenIdentifier>
			<Abstract type="html">Reduces noise using a threshold value to define what is considered noise.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)noiseRedution:(CGFloat)level sharpness:(CGFloat)sharpness</Declaration>
			<Parameters>
				<Parameter>
					<Name>level</Name>
					<Abstract type="html">A CGFloat representing the threshold to use for determining noise. Default value: 0.02</Abstract>
				</Parameter><Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">A CGFloat representing the sharpness to apply to the filter. Default value: 0.40</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/noiseRedution:sharpness:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/zoomBlur:amount:</TokenIdentifier>
			<Abstract type="html">Simulates the effect of zooming the camera while capturing the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)zoomBlur:(CGPoint)center amount:(CGFloat)amount</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint representing the center of the zoom. Default value {150,150}</Abstract>
				</Parameter><Parameter>
					<Name>amount</Name>
					<Abstract type="html">The amount of zoom to apply. Default value 20.0</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/zoomBlur:amount:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorControlSaturation:brightness:contrast:</TokenIdentifier>
			<Abstract type="html">Color control filter.
Adjusts saturation, brightness, and contrast values.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorControlSaturation:(CGFloat)saturation brightness:(CGFloat)brightness contrast:(CGFloat)contrast</Declaration>
			<Parameters>
				<Parameter>
					<Name>saturation</Name>
					<Abstract type="html">Saturation value defaults to 1.0f, minimum 0.0f, maximum 2.0f</Abstract>
				</Parameter><Parameter>
					<Name>brightness</Name>
					<Abstract type="html">Brightness value defaults to 0.0f, minimum -1.0f, maximum 1.0f</Abstract>
				</Parameter><Parameter>
					<Name>contrast</Name>
					<Abstract type="html">Contrast value defaults to 1.0f, minimum 0.0f, maximum 4.0f</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorControlSaturation:brightness:contrast:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorMatrix:bias:</TokenIdentifier>
			<Abstract type="html">Color matrix filter
Multiplies source color values and adds a bias factor to each color component.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorMatrix:(UIColor *)color bias:(CGFloat)bias</Declaration>
			<Parameters>
				<Parameter>
					<Name>color</Name>
					<Abstract type="html">The color whose components will be used in the matrix multiplication</Abstract>
				</Parameter><Parameter>
					<Name>bias</Name>
					<Abstract type="html">The bias value to be used in the matrix multiplication</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorMatrix:bias:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/exposureAdjust:</TokenIdentifier>
			<Abstract type="html">Exposure adjustment filter
Adjusts the exposure setting for an image similar to the way you control exposure for a camera when you change the F-stop.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)exposureAdjust:(CGFloat)adjustment</Declaration>
			<Parameters>
				<Parameter>
					<Name>adjustment</Name>
					<Abstract type="html">The level of exposure adjustment, defaults to 0.5, minimum -10.0, maximum 10.0</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/exposureAdjust:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/gammaAdjustment:</TokenIdentifier>
			<Abstract type="html">Gamma adjustment filter
Adjusts midtone brightness.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)gammaAdjustment:(CGFloat)adjustment</Declaration>
			<Parameters>
				<Parameter>
					<Name>adjustment</Name>
					<Abstract type="html">The level of gamma adjustment, defaults to 0.75, minimum 0.10, maximum 3.0</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gammaAdjustment:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/hueAdjust:</TokenIdentifier>
			<Abstract type="html">Hue adjustment filter
Changes the overall hue, or tint, of the source pixels.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)hueAdjust:(CGFloat)angle</Declaration>
			<Parameters>
				<Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angular value to calculate the adjustment, defaults to 0.0, minimum -PI, maximum PI</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/hueAdjust:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/tempartureAndTint:target:</TokenIdentifier>
			<Abstract type="html">Temperature and tint filter
Adapts the reference white point for an image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)tempartureAndTint:(CGSize)neutral target:(CGSize)targetNeutral</Declaration>
			<Parameters>
				<Parameter>
					<Name>neutral</Name>
					<Abstract type="html">An offset value, defaults to {6500,0}</Abstract>
				</Parameter><Parameter>
					<Name>targetNeutral</Name>
					<Abstract type="html">An target offset value, defaults to {6500,0}</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/tempartureAndTint:target:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/toneCurve:</TokenIdentifier>
			<Abstract type="html">Tone curve filter
Adjusts tone response of the R, G, and B channels of an image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)toneCurve:(CGPoint *)pointArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>pointArray</Name>
					<Abstract type="html">A C-Array of CGPoints which will be used to construct the tone curve</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/toneCurve:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/vibranceAdjust:</TokenIdentifier>
			<Abstract type="html">Vibrance adjustment filter
Adjusts the saturation of an image while keeping pleasing skin tones.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)vibranceAdjust:(CGFloat)amount</Declaration>
			<Parameters>
				<Parameter>
					<Name>amount</Name>
					<Abstract type="html">The amount to adjust the image&apos;s vibrance, defaults to 0.0, minimum -1.0, maximum 1.0</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/vibranceAdjust:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorCube:cubeData:</TokenIdentifier>
			<Abstract type="html">Uses a three-dimensional color table to transform the source image pixels.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorCube:(CGFloat)dimension cubeData:(NSData *)data</Declaration>
			<Parameters>
				<Parameter>
					<Name>dimension</Name>
					<Abstract type="html">A CGFloat representing the number of XY planes used to create the resulting image. The size of the planes are dimension x dimension. Default value: 2.00</Abstract>
				</Parameter><Parameter>
					<Name>data</Name>
					<Abstract type="html">An NSData object that represents a three-dimensional texture.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorCube:cubeData:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorInvert</TokenIdentifier>
			<Abstract type="html">Color invert filter.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorInvert</Declaration>
			
			
			<Anchor>//api/name/colorInvert</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorMap:</TokenIdentifier>
			<Abstract type="html">Performs a nonlinear transformation of source color values using mapping values provided in a table.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorMap:(C4Image *)gradientImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>gradientImage</Name>
					<Abstract type="html">The image that provides the basis for the color map transformation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorMap:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorMonochrome:inputIntensity:</TokenIdentifier>
			<Abstract type="html">Color monochrome filter.
Remaps colors so they fall within shades of a single color.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorMonochrome:(UIColor *)color inputIntensity:(CGFloat)intensity</Declaration>
			<Parameters>
				<Parameter>
					<Name>color</Name>
					<Abstract type="html">The color to which the image will be mapped.</Abstract>
				</Parameter><Parameter>
					<Name>intensity</Name>
					<Abstract type="html">The intensity of the mapping, defaults to 1.0f, minimum 0.0f, maximum 1.0f</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorMonochrome:inputIntensity:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorPosterize:</TokenIdentifier>
			<Abstract type="html">Remaps red, green, and blue color components to the number of brightness values you specify for each color component.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorPosterize:(CGFloat)levels</Declaration>
			<Parameters>
				<Parameter>
					<Name>levels</Name>
					<Abstract type="html">A CGFloat representing the level of posterize effect to be applied to the image. Default value: 6.00</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorPosterize:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/falseColor:color2:</TokenIdentifier>
			<Abstract type="html">False color filter
Maps luminance to a color ramp of two colors.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)falseColor:(UIColor *)color1 color2:(UIColor *)color2</Declaration>
			<Parameters>
				<Parameter>
					<Name>color1</Name>
					<Abstract type="html">A UIColor.</Abstract>
				</Parameter><Parameter>
					<Name>color2</Name>
					<Abstract type="html">A UIColor.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/falseColor:color2:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/maskToAlpha</TokenIdentifier>
			<Abstract type="html">Converts a grayscale image to a white image that is masked by alpha.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)maskToAlpha</Declaration>
			
			
			<Anchor>//api/name/maskToAlpha</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/maximumComponent</TokenIdentifier>
			<Abstract type="html">Returns a grayscale image from max(r,g,b).</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)maximumComponent</Declaration>
			
			
			<Anchor>//api/name/maximumComponent</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/minimumComponent</TokenIdentifier>
			<Abstract type="html">Returns a grayscale image from min(r,g,b).</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)minimumComponent</Declaration>
			
			
			<Anchor>//api/name/minimumComponent</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sepiaTone:</TokenIdentifier>
			<Abstract type="html">Sepia tone filter
Maps the colors of an image to various shades of brown.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sepiaTone:(CGFloat)intensity</Declaration>
			<Parameters>
				<Parameter>
					<Name>intensity</Name>
					<Abstract type="html">The level of intensity for which to apply the sepia tone, defaults to 1.0, minimum 0.0, maximum 1.0</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sepiaTone:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/vignette:intensity:</TokenIdentifier>
			<Abstract type="html">Reduces the brightness of an image at the periphery.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)vignette:(CGFloat)radius intensity:(CGFloat)intensity</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">A CGFloat representing the radius for the vignette.</Abstract>
				</Parameter><Parameter>
					<Name>intensity</Name>
					<Abstract type="html">A CGFloat representing the intensity of the vignette.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/vignette:intensity:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/additionComposite:</TokenIdentifier>
			<Abstract type="html">Addition composite filter</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)additionComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/additionComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorBlend:</TokenIdentifier>
			<Abstract type="html">Color blend filter
Uses the luminance values of the background with the hue and saturation values of the source image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorBurn:</TokenIdentifier>
			<Abstract type="html">Color burn filter
Darkens the background image samples to reflect the source image samples.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorBurn:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorBurn:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/colorDodge:</TokenIdentifier>
			<Abstract type="html">Color dodge filter.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)colorDodge:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/colorDodge:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/darkenBlend:</TokenIdentifier>
			<Abstract type="html">Darken blend filter
Creates composite image samples by choosing the darker samples (from either the source image or the background).</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)darkenBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/darkenBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/differenceBlend:</TokenIdentifier>
			<Abstract type="html">Difference blend filter
Subtracts either the source image sample color from the background image sample color, or the reverse, depending on which sample has the greater brightness value.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)differenceBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/differenceBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/exclusionBlend:</TokenIdentifier>
			<Abstract type="html">Exclusion blend filter
Produces an effect similar to that produced by the Difference Blend filter but with lower contrast.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)exclusionBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/exclusionBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/hardLightBlend:</TokenIdentifier>
			<Abstract type="html">Hard light blend filter
Either multiplies or screens colors, depending on the source image sample color.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)hardLightBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/hardLightBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/hueBlend:</TokenIdentifier>
			<Abstract type="html">Hue blend filter
Uses the luminance and saturation values of the background with the hue of the source image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)hueBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/hueBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/lightenBlend:</TokenIdentifier>
			<Abstract type="html">Lighten blend filter
Creates composite image samples by choosing the lighter samples (either from the source image or the background).</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)lightenBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/lightenBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/luminosityBlend:</TokenIdentifier>
			<Abstract type="html">Luminosity blend filter
Uses the hue and saturation of the background with the luminance of the source image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)luminosityBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/luminosityBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/maximumComposite:</TokenIdentifier>
			<Abstract type="html">Maximum compositing filter
Computes the maximum value, by color component, of two input images and creates an output image using the maximum values.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)maximumComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/maximumComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/minimumComposite:</TokenIdentifier>
			<Abstract type="html">Minimum compositing filter
Computes the minimum value, by color component, of two input images and creates an output image using the minimum values.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)minimumComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/minimumComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/multiplyBlend:</TokenIdentifier>
			<Abstract type="html">Multiply blend filter
Multiplies the source image samples with the background image samples.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)multiplyBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/multiplyBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/multiplyComposite:</TokenIdentifier>
			<Abstract type="html">Multiply compositing filter
Multiplies the color component of two input images and creates an output image using the multiplied values.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)multiplyComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/multiplyComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/overlayBlend:</TokenIdentifier>
			<Abstract type="html">Overlay blend filter
Either multiplies or screens the source image samples with the background image samples, depending on the background color.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)overlayBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/overlayBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/saturationBlend:</TokenIdentifier>
			<Abstract type="html">Saturation blend filter
Uses the luminance and hue values of the background with the saturation of the source image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)saturationBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/saturationBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/screenBlend:</TokenIdentifier>
			<Abstract type="html">Screen blend filter
Multiplies the inverse of the source image samples with the inverse of the background image samples.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)screenBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/screenBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/softLightBlend:</TokenIdentifier>
			<Abstract type="html">Soft light blend filter
Either darkens or lightens colors, depending on the source image sample color.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)softLightBlend:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/softLightBlend:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sourceAtopComposite:</TokenIdentifier>
			<Abstract type="html">Source-atop compositing filter
Places the source image over the background image, then uses the luminance of the background image to determine what to show.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sourceAtopComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sourceAtopComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sourceInComposite:</TokenIdentifier>
			<Abstract type="html">Source-in compositing filter
Uses the background image to define what to leave in the source image, effectively cropping the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sourceInComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sourceInComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sourceOutComposite:</TokenIdentifier>
			<Abstract type="html">Source-out compositing filter
Uses the background image to define what to take out of the first image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sourceOutComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sourceOutComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sourceOverComposite:</TokenIdentifier>
			<Abstract type="html">Source-over compositing filter
Places the background image over the source image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sourceOverComposite:(C4Image *)backgroundImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The image that will provide the background for this filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sourceOverComposite:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/bumpDistortion:radius:scale:</TokenIdentifier>
			<Abstract type="html">Creates a bump that originates at a specified point in the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)bumpDistortion:(CGPoint)center radius:(CGFloat)radius scale:(CGFloat)scale</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint marking the center of the bump.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">A CGFloat specifying the radius of the bump.</Abstract>
				</Parameter><Parameter>
					<Name>scale</Name>
					<Abstract type="html">A CGFloat marking the positive or negative scale of the bump.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bumpDistortion:radius:scale:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/bumpDistortionLinear:radius:angle:scale:</TokenIdentifier>
			<Abstract type="html">Creates a concave or convex distortion that originates from a line in the image.
  </Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)bumpDistortionLinear:(CGPoint)center radius:(CGFloat)radius angle:(CGFloat)angle scale:(CGFloat)scale</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint marking the center of the bump.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">A CGFloat specifying the radius of the bump.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">A GFloat specifying the angle of the line, in radians.</Abstract>
				</Parameter><Parameter>
					<Name>scale</Name>
					<Abstract type="html">A CGFloat marking the positive or negative scale of the bump.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bumpDistortionLinear:radius:angle:scale:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/circleSplashDistortion:radius:</TokenIdentifier>
			<Abstract type="html">Distorts the pixels starting at the circumference of a circle and emanating outward.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)circleSplashDistortion:(CGPoint)center radius:(CGFloat)radius</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint marking the center of the circle.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">A CGFloat specifying the radius of the circle.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/circleSplashDistortion:radius:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/circularWrap:radius:angle:</TokenIdentifier>
			<Abstract type="html">Wraps an image around a transparent circle.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)circularWrap:(CGPoint)center radius:(CGFloat)radius angle:(CGFloat)angle</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint marking the center of the circle.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">A CGFloat specifying the radius of the circle.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">A GFloat specifying the angle of the distortion.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/circularWrap:radius:angle:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/droste:inset2:strandRadius:periodicity:rotation:zoom:</TokenIdentifier>
			<Abstract type="html">Recursively draws a portion of an image in imitation of an M. C. Escher drawing.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)droste:(CGPoint)inset1 inset2:(CGPoint)inset2 strandRadius:(CGFloat)radius periodicity:(CGFloat)periodicity rotation:(CGFloat)rotation zoom:(CGFloat)zoom</Declaration>
			<Parameters>
				<Parameter>
					<Name>inset1</Name>
					<Abstract type="html">The top-left corner of the portion of the image to repeat.</Abstract>
				</Parameter><Parameter>
					<Name>inset2</Name>
					<Abstract type="html">The bottom-right corner of the portion of the image to repeat.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the repetition.</Abstract>
				</Parameter><Parameter>
					<Name>periodicity</Name>
					<Abstract type="html">The period of the repetition.</Abstract>
				</Parameter><Parameter>
					<Name>rotation</Name>
					<Abstract type="html">The rotation angle of the portion of the image to be repeated.</Abstract>
				</Parameter><Parameter>
					<Name>zoom</Name>
					<Abstract type="html">The zoom level for the repetition.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/droste:inset2:strandRadius:periodicity:rotation:zoom:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/displacementDistortion:scale:</TokenIdentifier>
			<Abstract type="html">Applies the grayscale values of the second image to the first image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)displacementDistortion:(C4Image *)displacementImage scale:(CGFloat)scale</Declaration>
			<Parameters>
				<Parameter>
					<Name>displacementImage</Name>
					<Abstract type="html">The second image to use as the basis for distortion the receiver.</Abstract>
				</Parameter><Parameter>
					<Name>scale</Name>
					<Abstract type="html">The scale of the effect on the receiver&apos;s image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/displacementDistortion:scale:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/glassDistortion:center:scale:</TokenIdentifier>
			<Abstract type="html">Distorts an image by applying a glass-like texture.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)glassDistortion:(C4Image *)texture center:(CGPoint)center scale:(CGFloat)scale</Declaration>
			<Parameters>
				<Parameter>
					<Name>texture</Name>
					<Abstract type="html">A C4Image that acts as a texture map for the filter.</Abstract>
				</Parameter><Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint representing the center of the texture map.</Abstract>
				</Parameter><Parameter>
					<Name>scale</Name>
					<Abstract type="html">A CGFloat representing the scale of the effect of the distortion.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/glassDistortion:center:scale:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/glassLozenge:point2:radius:refraction:</TokenIdentifier>
			<Abstract type="html">Creates a lozenge-shaped lens and distorts the portion of the image over which the lens is placed.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)glassLozenge:(CGPoint)point1 point2:(CGPoint)point2 radius:(CGFloat)radius refraction:(CGFloat)refraction</Declaration>
			<Parameters>
				<Parameter>
					<Name>point1</Name>
					<Abstract type="html">The first point of the lozenge.</Abstract>
				</Parameter><Parameter>
					<Name>point2</Name>
					<Abstract type="html">The second point of the lozenge.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the lozenge.</Abstract>
				</Parameter><Parameter>
					<Name>refraction</Name>
					<Abstract type="html">The level of refraction for the simulated glass effect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/glassLozenge:point2:radius:refraction:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/holeDistortion:radius:</TokenIdentifier>
			<Abstract type="html">Creates a circular area that pushes the image pixels outward, distorting those pixels closest to the circle the most</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)holeDistortion:(CGPoint)center radius:(CGFloat)radius</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the hole.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the hole.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/holeDistortion:radius:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/lightTunnel:rotation:radius:</TokenIdentifier>
			<Abstract type="html">Rotates a portion of the input image specified by the center and radius parameters to give a tunneling effect.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)lightTunnel:(CGPoint)center rotation:(CGFloat)rotation radius:(CGFloat)radius</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the light tunnel distortion.</Abstract>
				</Parameter><Parameter>
					<Name>rotation</Name>
					<Abstract type="html">The rotation angle of the distortion.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the invisible circle around which the distortion will be stretched.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/lightTunnel:rotation:radius:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/pinchDistortion:radius:scale:</TokenIdentifier>
			<Abstract type="html">Creates a rectangular-shaped area that pinches source pixels inward, distorting those pixels closest to the rectangle the most.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)pinchDistortion:(CGPoint)center radius:(CGFloat)radius scale:(CGFloat)scale</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the pinch distortion.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the pinch.</Abstract>
				</Parameter><Parameter>
					<Name>scale</Name>
					<Abstract type="html">The scale of the pinch. This value must greater than 0.0 and less than 2.0</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pinchDistortion:radius:scale:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/stretchCrop:cropAmount:stretchAmount:</TokenIdentifier>
			<Abstract type="html">Distorts an image by stretching and or cropping it to fit a target size.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)stretchCrop:(CGSize)size cropAmount:(CGFloat)cropAmount stretchAmount:(CGFloat)stretchAmount</Declaration>
			<Parameters>
				<Parameter>
					<Name>size</Name>
					<Abstract type="html">This value specifies the size of the output image in pixels.</Abstract>
				</Parameter><Parameter>
					<Name>cropAmount</Name>
					<Abstract type="html">This value determines if, and how much, cropping should be used to achieve the target size. If the value is 0, the image is stretched but not cropped. If the value is 1, the image is cropped but not stretched. Values in-between use stretching and cropping proportionally.</Abstract>
				</Parameter><Parameter>
					<Name>stretchAmount</Name>
					<Abstract type="html">This value determines how much stretching to apply to the center of the image, if stretching is indicated by the inputCropAmount value. A value of 0 causes the center of the image to maintain its original aspect ratio. A value of 0 causes the image to be stretched uniformly.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stretchCrop:cropAmount:stretchAmount:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/torusLensDistortion:radius:width:refraction:</TokenIdentifier>
			<Abstract type="html">Creates a torus-shaped lens and distorts the portion of the image over which the lens is placed.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)torusLensDistortion:(CGPoint)center radius:(CGFloat)radius width:(CGFloat)width refraction:(CGFloat)refraction</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the torus.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the torus.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width of the band of the torus.</Abstract>
				</Parameter><Parameter>
					<Name>refraction</Name>
					<Abstract type="html">The level of refraction seen through the torus.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/torusLensDistortion:radius:width:refraction:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/twirlDistortion:radius:angle:</TokenIdentifier>
			<Abstract type="html">Rotates pixels around a point to give a twirling effect.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)twirlDistortion:(CGPoint)center radius:(CGFloat)radius angle:(CGFloat)angle</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint marking the center of the twirl.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">A CGFloat specifying the radius of the twirl.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">A GFloat specifying the number of rotations that the twirl will do.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/twirlDistortion:radius:angle:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/vortexDistortion:radius:angle:</TokenIdentifier>
			<Abstract type="html">Rotates pixels around a point to simulate a vortex.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)vortexDistortion:(CGPoint)center radius:(CGFloat)radius angle:(CGFloat)angle</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">A CGPoint marking the center of the vortex.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">A CGFloat specifying the radius of the vortex.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">A GFloat specifying the number of rotations that the vortex will do.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/vortexDistortion:radius:angle:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/checkerboard:center:color1:color2:squareWidth:sharpness:</TokenIdentifier>
			<Abstract type="html">Generates a checkerboard pattern.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)checkerboard:(CGSize)size center:(CGPoint)center color1:(UIColor *)color1 color2:(UIColor *)color2 squareWidth:(CGFloat)width sharpness:(CGFloat)sharpness</Declaration>
			<Parameters>
				<Parameter>
					<Name>size</Name>
					<Abstract type="html">The size of the resulting image, this should be greater than CGPointZero.</Abstract>
				</Parameter><Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the checkerboard pattern.</Abstract>
				</Parameter><Parameter>
					<Name>color1</Name>
					<Abstract type="html">The first color of the pattern.</Abstract>
				</Parameter><Parameter>
					<Name>color2</Name>
					<Abstract type="html">The second color of the pattern.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width (and height of the pattern&apos;s squares.</Abstract>
				</Parameter><Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">The sharpness of the edges between the squares.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new C4Image whose contents are a checkerboard pattern of two colors.</Abstract></ReturnValue>
			<Anchor>//api/name/checkerboard:center:color1:color2:squareWidth:sharpness:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/constantColor:color:</TokenIdentifier>
			<Abstract type="html">Generates a solid color.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)constantColor:(CGSize)size color:(UIColor *)color</Declaration>
			<Parameters>
				<Parameter>
					<Name>size</Name>
					<Abstract type="html">The size of the resulting image, this shold be greater than CGPointZero.</Abstract>
				</Parameter><Parameter>
					<Name>color</Name>
					<Abstract type="html">The color used to generate the image.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new C4Image whose contents are a solid color.</Abstract></ReturnValue>
			<Anchor>//api/name/constantColor:color:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/random:</TokenIdentifier>
			<Abstract type="html">Generates an image of infinite extent whose pixel values are made up of four independent, uniformly-distributed random numbers in the 0 to 1 range.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)random:(CGSize)size</Declaration>
			<Parameters>
				<Parameter>
					<Name>size</Name>
					<Abstract type="html">The size of the resulting image, this should be greater than CGPointZero.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/random:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/affineTransform:</TokenIdentifier>
			<Abstract type="html">Applies an affine transform to an image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)affineTransform:(CGAffineTransform)transform</Declaration>
			<Parameters>
				<Parameter>
					<Name>transform</Name>
					<Abstract type="html">A CGAffineTransform.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/affineTransform:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/crop:</TokenIdentifier>
			<Abstract type="html">Applies a crop to an image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)crop:(CGRect)area</Declaration>
			<Parameters>
				<Parameter>
					<Name>area</Name>
					<Abstract type="html">A CGRect defined in the receiver&apos;s coordinates to which its image will be cropped.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/crop:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/lanczosScaleTransform:aspectRatio:</TokenIdentifier>
			<Abstract type="html">Produces a high-quality, scaled version of a source image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)lanczosScaleTransform:(CGFloat)scale aspectRatio:(CGFloat)ratio</Declaration>
			<Parameters>
				<Parameter>
					<Name>scale</Name>
					<Abstract type="html">A CGFloat specifying the scale you want to which the receiver should downsize.</Abstract>
				</Parameter><Parameter>
					<Name>ratio</Name>
					<Abstract type="html">A CGFloat specifying the new width : height ratio.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/lanczosScaleTransform:aspectRatio:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/perspectiveTransform:</TokenIdentifier>
			<Abstract type="html">Alters the geometry of an image to simulate the observer changing viewing position.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)perspectiveTransform:(CGPoint *)points</Declaration>
			<Parameters>
				<Parameter>
					<Name>points</Name>
					<Abstract type="html">An array of 4 CGPoints to use for the transform.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/perspectiveTransform:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/straighten:</TokenIdentifier>
			<Abstract type="html">Straighten filter
Rotates the source image by the specified angle in radians.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)straighten:(CGFloat)angle</Declaration>
			<Parameters>
				<Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angular value to calculate the adjustment, defaults to 0.0, minimum -PI, maximum PI</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/straighten:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/gaussianGradient:center:innerColor:outerColor:radius:</TokenIdentifier>
			<Abstract type="html">Generates a gradient that varies from one color to another using a Gaussian distribution.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)gaussianGradient:(CGSize)size center:(CGPoint)center innerColor:(UIColor *)innerColor outerColor:(UIColor *)outerColor radius:(CGFloat)radius</Declaration>
			<Parameters>
				<Parameter>
					<Name>size</Name>
					<Abstract type="html">The size of the output image.</Abstract>
				</Parameter><Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>innerColor</Name>
					<Abstract type="html">The inner color of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>outerColor</Name>
					<Abstract type="html">The outer color of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the gradient.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gaussianGradient:center:innerColor:outerColor:radius:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/linearGradient:startPoint:endPoint:startColor:endColor:</TokenIdentifier>
			<Abstract type="html">Generates a gradient that varies along a linear axis between two defined endpoints.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)linearGradient:(CGSize)size startPoint:(CGPoint)startPoint endPoint:(CGPoint)endPoint startColor:(UIColor *)startColor endColor:(UIColor *)endColor</Declaration>
			<Parameters>
				<Parameter>
					<Name>size</Name>
					<Abstract type="html">The size of the output image.</Abstract>
				</Parameter><Parameter>
					<Name>startPoint</Name>
					<Abstract type="html">The start point of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>endPoint</Name>
					<Abstract type="html">The end point of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>startColor</Name>
					<Abstract type="html">The start color of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>endColor</Name>
					<Abstract type="html">The end color of the gradient.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/linearGradient:startPoint:endPoint:startColor:endColor:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/radialGradient:center:innerRadius:outerRadius:innerColor:outerColor:</TokenIdentifier>
			<Abstract type="html">Generates a gradient that varies radially between two circles having the same center.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)radialGradient:(CGSize)size center:(CGPoint)center innerRadius:(CGFloat)innerRadius outerRadius:(CGFloat)outerRadius innerColor:(UIColor *)innerColor outerColor:(UIColor *)outerColor</Declaration>
			<Parameters>
				<Parameter>
					<Name>size</Name>
					<Abstract type="html">The size of the output image.</Abstract>
				</Parameter><Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>innerRadius</Name>
					<Abstract type="html">The inner radius of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>outerRadius</Name>
					<Abstract type="html">The outer radius of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>innerColor</Name>
					<Abstract type="html">The inner color of the gradient.</Abstract>
				</Parameter><Parameter>
					<Name>outerColor</Name>
					<Abstract type="html">The outer color of the gradient.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/radialGradient:center:innerRadius:outerRadius:innerColor:outerColor:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/circularScreen:width:sharpness:</TokenIdentifier>
			<Abstract type="html">Simulates a circular-shaped halftone screen.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)circularScreen:(CGPoint)center width:(CGFloat)width sharpness:(CGFloat)sharpness</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the circular screen effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width of the bands in the effect.</Abstract>
				</Parameter><Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">The sharpness of the edges of the bands in the effect (values from 0.0 to 1.0)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/circularScreen:width:sharpness:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/dotScreen:angle:width:sharpness:</TokenIdentifier>
			<Abstract type="html">Simulates the dot patterns of a halftone screen.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)dotScreen:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width sharpness:(CGFloat)sharpness</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the dot pattern.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the bands of dots in the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width of the dots in the effect.</Abstract>
				</Parameter><Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">The sharpness of the edges of the dots in the effect (values from 0.0 to 1.0)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/dotScreen:angle:width:sharpness:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/hatchedScreen:angle:width:sharpness:</TokenIdentifier>
			<Abstract type="html">Simulates the hatched pattern of a halftone screen.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)hatchedScreen:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width sharpness:(CGFloat)sharpness</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the hatch pattern.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the bands of hatches in the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width of the hatches in the effect.</Abstract>
				</Parameter><Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">The sharpness of the edges of the hatches in the effect (values from 0.0 to 1.0)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/hatchedScreen:angle:width:sharpness:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/lineScreen:angle:width:sharpness:</TokenIdentifier>
			<Abstract type="html">Simulates the line pattern of a halftone screen.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)lineScreen:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width sharpness:(CGFloat)sharpness</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the line pattern.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the bands of line in the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width of the lines in the effect.</Abstract>
				</Parameter><Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">The sharpness of the edges of the lines in the effect (values from 0.0 to 1.0)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/lineScreen:angle:width:sharpness:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sharpenLuminance:</TokenIdentifier>
			<Abstract type="html">Increases image detail by sharpening.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sharpenLuminance:(CGFloat)sharpness</Declaration>
			<Parameters>
				<Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">The level of sharpness for the filter&apos;s effect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharpenLuminance:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/unsharpMask:intensity:</TokenIdentifier>
			<Abstract type="html">Increases the contrast of the edges between pixels of different colors in an image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)unsharpMask:(CGFloat)radius intensity:(CGFloat)intensity</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the blending area.</Abstract>
				</Parameter><Parameter>
					<Name>intensity</Name>
					<Abstract type="html">The intensity of the filter&apos;s effect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/unsharpMask:intensity:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/blendWithMask:mask:</TokenIdentifier>
			<Abstract type="html">Uses values from a grayscale mask to interpolate between an image and the background.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)blendWithMask:(C4Image *)backgroundImage mask:(C4Image *)maskImage</Declaration>
			<Parameters>
				<Parameter>
					<Name>backgroundImage</Name>
					<Abstract type="html">The background image that will be revealed by the mask.</Abstract>
				</Parameter><Parameter>
					<Name>maskImage</Name>
					<Abstract type="html">The image to use as the mask (should be black and white).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/blendWithMask:mask:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/bloom:intensity:</TokenIdentifier>
			<Abstract type="html">Softens edges and applies a pleasant glow to an image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)bloom:(CGFloat)radius intensity:(CGFloat)intensity</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the area, per pixel, to which the bloom filter is applied.</Abstract>
				</Parameter><Parameter>
					<Name>intensity</Name>
					<Abstract type="html">The intensity of the filter&apos;s effect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bloom:intensity:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/comicEffect</TokenIdentifier>
			<Abstract type="html">Simulates a comic book drawing by outlining edges and applying a color halftone effect.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)comicEffect</Declaration>
			
			
			<Anchor>//api/name/comicEffect</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/gloom:intensity:</TokenIdentifier>
			<Abstract type="html">Dulls the highlights of an image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)gloom:(CGFloat)radius intensity:(CGFloat)intensity</Declaration>
			<Parameters>
				<Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the area, per pixel, to which the bloom filter is applied.</Abstract>
				</Parameter><Parameter>
					<Name>intensity</Name>
					<Abstract type="html">The intensity of the filter&apos;s effect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gloom:intensity:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/highlightShadowAdjust:shadowAmount:</TokenIdentifier>
			<Abstract type="html">Highlight and shadow adjustment filter
Adjust the tonal mapping of an image while preserving spatial detail.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)highlightShadowAdjust:(CGFloat)highlightAmount shadowAmount:(CGFloat)shadowAmount</Declaration>
			<Parameters>
				<Parameter>
					<Name>highlightAmount</Name>
					<Abstract type="html">The adjustment value for image highlights, defaults to 1.0, minimum 0.0, maximum 1.0</Abstract>
				</Parameter><Parameter>
					<Name>shadowAmount</Name>
					<Abstract type="html">The adjustment value for image shadows, defaults to 0.0, minimum -1.0, maximum 1.0</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/highlightShadowAdjust:shadowAmount:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/pixellate:scale:</TokenIdentifier>
			<Abstract type="html">Makes an image blocky by mapping the image to colored squares whose color is defined by the replaced pixels.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)pixellate:(CGPoint)center scale:(CGFloat)scale</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>scale</Name>
					<Abstract type="html">The scale of the pixel sizes after the effect has been applied.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pixellate:scale:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/affineClamp:</TokenIdentifier>
			<Abstract type="html">Performs an affine transform on a source image and then clamps the pixels at the edge of the transformed image, extending them outwards.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)affineClamp:(CGAffineTransform)transform</Declaration>
			<Parameters>
				<Parameter>
					<Name>transform</Name>
					<Abstract type="html">The affine transform you wish to apply prior to clamping the outer edge pixels.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/affineClamp:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/affineTile:</TokenIdentifier>
			<Abstract type="html">Applies an affine transform to an image and then tiles the transformed image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)affineTile:(CGAffineTransform)transform</Declaration>
			<Parameters>
				<Parameter>
					<Name>transform</Name>
					<Abstract type="html">The affine transform you wish to apply prior to tiling the transformed image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/affineTile:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/eightFoldReflectedTile:angle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by applying an 8-way reflected symmetry.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)eightFoldReflectedTile:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/eightFoldReflectedTile:angle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/fourFoldReflectedTile:angle:acuteAngle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by applying a 4-way reflected symmetry.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)fourFoldReflectedTile:(CGPoint)center angle:(CGFloat)angle acuteAngle:(CGFloat)acuteAngle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>acuteAngle</Name>
					<Abstract type="html">The acute angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fourFoldReflectedTile:angle:acuteAngle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/fourFoldRotatedTile:angle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by rotating the source image at increments of 90 degrees.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)fourFoldRotatedTile:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fourFoldRotatedTile:angle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/fourFoldTranslatedTile:angle:acuteAngle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by applying 4 translation operations.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)fourFoldTranslatedTile:(CGPoint)center angle:(CGFloat)angle acuteAngle:(CGFloat)acuteAngle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>acuteAngle</Name>
					<Abstract type="html">The acute angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fourFoldTranslatedTile:angle:acuteAngle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/glideReflectedTile:angle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by translating and smearing the image.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)glideReflectedTile:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/glideReflectedTile:angle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/perspectiveTile:</TokenIdentifier>
			<Abstract type="html">Applies a perspective transform to an image and then tiles the result.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)perspectiveTile:(CGPoint *)points</Declaration>
			<Parameters>
				<Parameter>
					<Name>points</Name>
					<Abstract type="html">A CGPoint array of 4 points defining the space into which the image will be transformed prior to tiling.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/perspectiveTile:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sixFoldReflectedTile:angle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by applying a 6-way reflected symmetry.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sixFoldReflectedTile:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sixFoldReflectedTile:angle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/sixFoldRotatedTile:angle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by rotating the source image at increments of 60 degrees.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)sixFoldRotatedTile:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sixFoldRotatedTile:angle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/triangleKaleidescope:size:rotation:decay:</TokenIdentifier>
			<Abstract type="html">Maps a triangular portion of an input image to create a kaleidoscope effect.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)triangleKaleidescope:(CGPoint)point size:(CGFloat)size rotation:(CGFloat)rotation decay:(CGFloat)decay</Declaration>
			<Parameters>
				<Parameter>
					<Name>point</Name>
					<Abstract type="html">The point of interest around which the effect will be rendered.</Abstract>
				</Parameter><Parameter>
					<Name>size</Name>
					<Abstract type="html">The size of the triangle that will be select.</Abstract>
				</Parameter><Parameter>
					<Name>rotation</Name>
					<Abstract type="html">The rotation of the effect&apos;s space.</Abstract>
				</Parameter><Parameter>
					<Name>decay</Name>
					<Abstract type="html">The decay of the effect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/triangleKaleidescope:size:rotation:decay:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Image/twelveFoldReflectedTile:angle:width:</TokenIdentifier>
			<Abstract type="html">Produces a tiled image from a source image by rotating the source image at increments of 30 degrees.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>- (void)twelveFoldReflectedTile:(CGPoint)center angle:(CGFloat)angle width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">The center point of the effect within the image.</Abstract>
				</Parameter><Parameter>
					<Name>angle</Name>
					<Abstract type="html">The angle of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The width, along with the center parameter, defines the portion of the image to tile.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/twelveFoldReflectedTile:angle:width:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Image/defaultStyle</TokenIdentifier>
			<Abstract type="html">Returns the appearance proxy for the object, cast as a C4Image rather than the standard (id) cast provided by UIAppearance.</Abstract>
			<DeclaredIn>C4Image.h</DeclaredIn>			
			
			<Declaration>+ (C4Image *)defaultStyle</Declaration>
			
			<ReturnValue><Abstract type="html">The appearance proxy for the receiver, cast as a C4Image.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultStyle</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
	</File>
</Tokens>