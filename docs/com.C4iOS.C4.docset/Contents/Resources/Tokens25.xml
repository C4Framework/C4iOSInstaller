<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/C4Shape.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/C4Shape</TokenIdentifier>
			<Abstract type="html">The C4Shape class implements a modifiable view that handles shapes. You can use this class to create almost any kind of basic shape, as well as more complicated polygons.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>
			
			<NodeRef refid="25"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/ellipse:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is an ellipse.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)ellipse:(CGRect)rect</Declaration>
			<Parameters>
				<Parameter>
					<Name>rect</Name>
					<Abstract type="html">A rectangle that defines the shape of an ellipse.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with an ellipse path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/ellipse:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/rect:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a rectangle.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)rect:(CGRect)rect</Declaration>
			<Parameters>
				<Parameter>
					<Name>rect</Name>
					<Abstract type="html">A rectangle that defines the shape.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with an rectangular path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/rect:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/line:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a line.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)line:(CGPoint *)pointArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>pointArray</Name>
					<Abstract type="html">A C-Array containing 2 CGPoints like: {CGpoint,CGPoint}.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with a line path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/line:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/triangle:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a triangle.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)triangle:(CGPoint *)pointArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>pointArray</Name>
					<Abstract type="html">A C-Array containing 3 CGPoints like: {CGpoint,CGPoint,CGPoint}.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with a triangle path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/triangle:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/polygon:pointCount:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a polygon.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)polygon:(CGPoint *)pointArray pointCount:(NSInteger)pointCount</Declaration>
			<Parameters>
				<Parameter>
					<Name>pointArray</Name>
					<Abstract type="html">A C-Array containing any number of CGPoints like: {CGpoint, .. , CGPoint}.</Abstract>
				</Parameter><Parameter>
					<Name>pointCount</Name>
					<Abstract type="html">The number of points in the array.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with a polygon path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/polygon:pointCount:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/arcWithCenter:radius:startAngle:endAngle:clockwise:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is an arc.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)arcWithCenter:(CGPoint)centerPoint radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise</Declaration>
			<Parameters>
				<Parameter>
					<Name>centerPoint</Name>
					<Abstract type="html">The center point of the arc.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the arc.</Abstract>
				</Parameter><Parameter>
					<Name>startAngle</Name>
					<Abstract type="html">The starting angle of the arc, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>endAngle</Name>
					<Abstract type="html">The ending angle of the arc, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>clockwise</Name>
					<Abstract type="html">A Boolean value specifying whether or not the arc will draw in a clockwise direction from the start to end angle</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with an arc path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/arcWithCenter:radius:startAngle:endAngle:clockwise:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/wedgeWithCenter:radius:startAngle:endAngle:clockwise:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a wedge.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)wedgeWithCenter:(CGPoint)centerPoint radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise</Declaration>
			<Parameters>
				<Parameter>
					<Name>centerPoint</Name>
					<Abstract type="html">The center point of the wedge.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the wedge.</Abstract>
				</Parameter><Parameter>
					<Name>startAngle</Name>
					<Abstract type="html">The starting angle of the wedge, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>endAngle</Name>
					<Abstract type="html">The ending angle of the wedge, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>clockwise</Name>
					<Abstract type="html">A Boolean value specifying whether or not the wedge will draw in a clockwise direction from the start to end angle</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with a wedge path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/wedgeWithCenter:radius:startAngle:endAngle:clockwise:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/curve:controlPoints:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a bezier curve.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)curve:(CGPoint *)beginEndPointArray controlPoints:(CGPoint *)controlPointArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>beginEndPointArray</Name>
					<Abstract type="html">A C-Array consisting of two points, like: {CGPoint,CGPoint}, which mark the beginning and end of the curve.</Abstract>
				</Parameter><Parameter>
					<Name>controlPointArray</Name>
					<Abstract type="html">A C-Array consisting of two points, like: {CGPoint,CGPoint}, which mark the control points that distort the curve.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with a curve path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/curve:controlPoints:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/quadCurve:controlPoint:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a quadratic curve
  </Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)quadCurve:(CGPoint *)beginEndPointArray controlPoint:(CGPoint)controlPoint</Declaration>
			<Parameters>
				<Parameter>
					<Name>beginEndPointArray</Name>
					<Abstract type="html">A C-Array consisting of two points, like: {CGPoint,CGPoint}, which mark the beginning and end of the curve.</Abstract>
				</Parameter><Parameter>
					<Name>controlPoint</Name>
					<Abstract type="html">A CGPoint used to defined the quadratic curve.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with a curve path or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/quadCurve:controlPoint:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/shapeFromString:withFont:</TokenIdentifier>
			<Abstract type="html">Creates and returns an instance of C4Shape, whose path is a combination of curves made up from a string of text.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)shapeFromString:(NSString *)string withFont:(C4Font *)font</Declaration>
			<Parameters>
				<Parameter>
					<Name>string</Name>
					<Abstract type="html">The string to turn into a shape.</Abstract>
				</Parameter><Parameter>
					<Name>font</Name>
					<Abstract type="html">The font used to generate the paths that will be drawn.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized C4Shape object created with a combination of paths that look like characters or nil if initialization is not successful.</Abstract></ReturnValue>
			<Anchor>//api/name/shapeFromString:withFont:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/ellipse:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to an ellipse</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)ellipse:(CGRect)rect</Declaration>
			<Parameters>
				<Parameter>
					<Name>rect</Name>
					<Abstract type="html">A rectangle that defines the shape of an ellipse.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/ellipse:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/rect:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to a rectangle</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)rect:(CGRect)rect</Declaration>
			<Parameters>
				<Parameter>
					<Name>rect</Name>
					<Abstract type="html">A rectangle that defines the shape.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/rect:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/line:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to a line</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)line:(CGPoint *)pointArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>pointArray</Name>
					<Abstract type="html">A C-Array containing 2 CGPoints like: {CGpoint,CGPoint}.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/line:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/triangle:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to a triangle</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)triangle:(CGPoint *)pointArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>pointArray</Name>
					<Abstract type="html">A C-Array containing 3 CGPoints like: {CGpoint,CGPoint,CGPoint}.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/triangle:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/polygon:pointCount:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to a polygon</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)polygon:(CGPoint *)pointArray pointCount:(NSInteger)pointCount</Declaration>
			<Parameters>
				<Parameter>
					<Name>pointArray</Name>
					<Abstract type="html">A C-Array containing any number of CGPoints like: {CGpoint, .. , CGPoint}.</Abstract>
				</Parameter><Parameter>
					<Name>pointCount</Name>
					<Abstract type="html">The number of points in the array.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/polygon:pointCount:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/arcWithCenter:radius:startAngle:endAngle:clockwise:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to an arc</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)arcWithCenter:(CGPoint)centerPoint radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise</Declaration>
			<Parameters>
				<Parameter>
					<Name>centerPoint</Name>
					<Abstract type="html">The center point of the arc.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the arc.</Abstract>
				</Parameter><Parameter>
					<Name>startAngle</Name>
					<Abstract type="html">The starting angle of the arc, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>endAngle</Name>
					<Abstract type="html">The ending angle of the arc, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>clockwise</Name>
					<Abstract type="html">A Boolean value specifying whether or not the arc will draw in a clockwise direction from the start to end angle</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/arcWithCenter:radius:startAngle:endAngle:clockwise:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/wedgeWithCenter:radius:startAngle:endAngle:clockwise:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to a wedge</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)wedgeWithCenter:(CGPoint)centerPoint radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise</Declaration>
			<Parameters>
				<Parameter>
					<Name>centerPoint</Name>
					<Abstract type="html">The center point of the wedge.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of the wedge.</Abstract>
				</Parameter><Parameter>
					<Name>startAngle</Name>
					<Abstract type="html">The starting angle of the wedge, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>endAngle</Name>
					<Abstract type="html">The ending angle of the wedge, in radians in the range of (0 .. 2*PI)</Abstract>
				</Parameter><Parameter>
					<Name>clockwise</Name>
					<Abstract type="html">A Boolean value specifying whether or not the wedge will draw in a clockwise direction from the start to end angle</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/wedgeWithCenter:radius:startAngle:endAngle:clockwise:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/curve:controlPoints:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to a curve</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)curve:(CGPoint *)beginEndPointArray controlPoints:(CGPoint *)controlPointArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>beginEndPointArray</Name>
					<Abstract type="html">A C-Array consisting of two points, like: {CGPoint,CGPoint}, which mark the beginning and end of the curve.</Abstract>
				</Parameter><Parameter>
					<Name>controlPointArray</Name>
					<Abstract type="html">A C-Array consisting of two points, like: {CGPoint,CGPoint}, which mark the control points that distort the curve.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/curve:controlPoints:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/quadCurve:controlPoint:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to a quadratic curve</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)quadCurve:(CGPoint *)beginEndPointArray controlPoint:(CGPoint)controlPoint</Declaration>
			<Parameters>
				<Parameter>
					<Name>beginEndPointArray</Name>
					<Abstract type="html">A C-Array consisting of two points, like: {CGPoint,CGPoint}, which mark the beginning and end of the curve.</Abstract>
				</Parameter><Parameter>
					<Name>controlPoint</Name>
					<Abstract type="html">A CGPoint used to defined the quadratic curve.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/quadCurve:controlPoint:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/shapeFromString:withFont:</TokenIdentifier>
			<Abstract type="html">Changes the object&apos;s current shape to one made from the paths of a given string</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)shapeFromString:(NSString *)string withFont:(C4Font *)font</Declaration>
			<Parameters>
				<Parameter>
					<Name>string</Name>
					<Abstract type="html">The string to turn into a shape.</Abstract>
				</Parameter><Parameter>
					<Name>font</Name>
					<Abstract type="html">The font used to generate the paths that will be drawn.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/shapeFromString:withFont:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/closeShape</TokenIdentifier>
			<Abstract type="html">Closes the path of a shape that currently does not have a line from its last point to its beginning point.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)closeShape</Declaration>
			
			
			<Anchor>//api/name/closeShape</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setDashPattern:pointCount:</TokenIdentifier>
			<Abstract type="html">Sets the dash pattern for the shape&apos;s line.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>- (void)setDashPattern:(CGFloat *)dashPattern pointCount:(NSUInteger)pointCount</Declaration>
			<Parameters>
				<Parameter>
					<Name>dashPattern</Name>
					<Abstract type="html">A C-Array of float values, like {5, 10, 15, 20} to use as the distances for gaps and dashes.</Abstract>
				</Parameter><Parameter>
					<Name>pointCount</Name>
					<Abstract type="html">The number of values in the dashPattern.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDashPattern:pointCount:</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setFillColor:</TokenIdentifier>
			<Abstract type="html">The color used to fill the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) UIColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/fillColor</TokenIdentifier>
			<Abstract type="html">The color used to fill the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) UIColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/fillColor</TokenIdentifier>
			<Abstract type="html">The color used to fill the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) UIColor *fillColor</Declaration>
			
			
			<Anchor>//api/name/fillColor</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setStrokeColor:</TokenIdentifier>
			<Abstract type="html">The color used to stroke the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) UIColor *strokeColor</Declaration>
			
			
			<Anchor>//api/name/strokeColor</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/strokeColor</TokenIdentifier>
			<Abstract type="html">The color used to stroke the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) UIColor *strokeColor</Declaration>
			
			
			<Anchor>//api/name/strokeColor</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/strokeColor</TokenIdentifier>
			<Abstract type="html">The color used to stroke the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) UIColor *strokeColor</Declaration>
			
			
			<Anchor>//api/name/strokeColor</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setLineDashPhase:</TokenIdentifier>
			<Abstract type="html">The dash phase applied to the shape’s path when stroked. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat lineDashPhase</Declaration>
			
			
			<Anchor>//api/name/lineDashPhase</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/lineDashPhase</TokenIdentifier>
			<Abstract type="html">The dash phase applied to the shape’s path when stroked. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat lineDashPhase</Declaration>
			
			
			<Anchor>//api/name/lineDashPhase</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/lineDashPhase</TokenIdentifier>
			<Abstract type="html">The dash phase applied to the shape’s path when stroked. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat lineDashPhase</Declaration>
			
			
			<Anchor>//api/name/lineDashPhase</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setLineWidth:</TokenIdentifier>
			<Abstract type="html">Specifies the line width of the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat lineWidth</Declaration>
			
			
			<Anchor>//api/name/lineWidth</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/lineWidth</TokenIdentifier>
			<Abstract type="html">Specifies the line width of the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat lineWidth</Declaration>
			
			
			<Anchor>//api/name/lineWidth</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/lineWidth</TokenIdentifier>
			<Abstract type="html">Specifies the line width of the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat lineWidth</Declaration>
			
			
			<Anchor>//api/name/lineWidth</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setMiterLimit:</TokenIdentifier>
			<Abstract type="html">The miter limit used when stroking the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat miterLimit</Declaration>
			
			
			<Anchor>//api/name/miterLimit</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/miterLimit</TokenIdentifier>
			<Abstract type="html">The miter limit used when stroking the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat miterLimit</Declaration>
			
			
			<Anchor>//api/name/miterLimit</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/miterLimit</TokenIdentifier>
			<Abstract type="html">The miter limit used when stroking the shape’s path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat miterLimit</Declaration>
			
			
			<Anchor>//api/name/miterLimit</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setStrokeEnd:</TokenIdentifier>
			<Abstract type="html">The relative location at which to stop stroking the path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat strokeEnd</Declaration>
			
			
			<Anchor>//api/name/strokeEnd</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/strokeEnd</TokenIdentifier>
			<Abstract type="html">The relative location at which to stop stroking the path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat strokeEnd</Declaration>
			
			
			<Anchor>//api/name/strokeEnd</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/strokeEnd</TokenIdentifier>
			<Abstract type="html">The relative location at which to stop stroking the path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat strokeEnd</Declaration>
			
			
			<Anchor>//api/name/strokeEnd</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setStrokeStart:</TokenIdentifier>
			<Abstract type="html">The relative location at which to begin stroking the path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat strokeStart</Declaration>
			
			
			<Anchor>//api/name/strokeStart</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/strokeStart</TokenIdentifier>
			<Abstract type="html">The relative location at which to begin stroking the path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat strokeStart</Declaration>
			
			
			<Anchor>//api/name/strokeStart</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/strokeStart</TokenIdentifier>
			<Abstract type="html">The relative location at which to begin stroking the path. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat strokeStart</Declaration>
			
			
			<Anchor>//api/name/strokeStart</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setLineDashPattern:</TokenIdentifier>
			<Abstract type="html">The dash pattern applied to the shape’s path when stroked.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSArray *lineDashPattern</Declaration>
			
			
			<Anchor>//api/name/lineDashPattern</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/lineDashPattern</TokenIdentifier>
			<Abstract type="html">The dash pattern applied to the shape’s path when stroked.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSArray *lineDashPattern</Declaration>
			
			
			<Anchor>//api/name/lineDashPattern</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/lineDashPattern</TokenIdentifier>
			<Abstract type="html">The dash pattern applied to the shape’s path when stroked.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSArray *lineDashPattern</Declaration>
			
			
			<Anchor>//api/name/lineDashPattern</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setFillRule:</TokenIdentifier>
			<Abstract type="html">The fill rule used when filling the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *fillRule</Declaration>
			
			
			<Anchor>//api/name/fillRule</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/fillRule</TokenIdentifier>
			<Abstract type="html">The fill rule used when filling the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *fillRule</Declaration>
			
			
			<Anchor>//api/name/fillRule</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/fillRule</TokenIdentifier>
			<Abstract type="html">The fill rule used when filling the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *fillRule</Declaration>
			
			
			<Anchor>//api/name/fillRule</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setLineCap:</TokenIdentifier>
			<Abstract type="html">Specifies the line cap style for the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *lineCap</Declaration>
			
			
			<Anchor>//api/name/lineCap</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/lineCap</TokenIdentifier>
			<Abstract type="html">Specifies the line cap style for the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *lineCap</Declaration>
			
			
			<Anchor>//api/name/lineCap</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/lineCap</TokenIdentifier>
			<Abstract type="html">Specifies the line cap style for the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *lineCap</Declaration>
			
			
			<Anchor>//api/name/lineCap</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setLineJoin:</TokenIdentifier>
			<Abstract type="html">Specifies the line join style for the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *lineJoin</Declaration>
			
			
			<Anchor>//api/name/lineJoin</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/lineJoin</TokenIdentifier>
			<Abstract type="html">Specifies the line join style for the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *lineJoin</Declaration>
			
			
			<Anchor>//api/name/lineJoin</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/lineJoin</TokenIdentifier>
			<Abstract type="html">Specifies the line join style for the shape’s path.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, strong, atomic) NSString *lineJoin</Declaration>
			
			
			<Anchor>//api/name/lineJoin</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setLine:</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the shape is a line.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isLine) BOOL line</Declaration>
			
			
			<Anchor>//api/name/line</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/isLine</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the shape is a line.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isLine) BOOL line</Declaration>
			
			
			<Anchor>//api/name/line</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/line</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the shape is a line.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isLine) BOOL line</Declaration>
			
			
			<Anchor>//api/name/line</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setArc:</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the shape is an arc.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isArc) BOOL arc</Declaration>
			
			
			<Anchor>//api/name/arc</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/isArc</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the shape is an arc.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isArc) BOOL arc</Declaration>
			
			
			<Anchor>//api/name/arc</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/arc</TokenIdentifier>
			<Abstract type="html">Specifies whether or not the shape is an arc.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, getter=isArc) BOOL arc</Declaration>
			
			
			<Anchor>//api/name/arc</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setPointA:</TokenIdentifier>
			<Abstract type="html">Specifies the origin point of a line. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint pointA</Declaration>
			
			
			<Anchor>//api/name/pointA</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/pointA</TokenIdentifier>
			<Abstract type="html">Specifies the origin point of a line. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint pointA</Declaration>
			
			
			<Anchor>//api/name/pointA</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/pointA</TokenIdentifier>
			<Abstract type="html">Specifies the origin point of a line. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint pointA</Declaration>
			
			
			<Anchor>//api/name/pointA</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setPointB:</TokenIdentifier>
			<Abstract type="html">Specifies the end point of a line. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint pointB</Declaration>
			
			
			<Anchor>//api/name/pointB</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/pointB</TokenIdentifier>
			<Abstract type="html">Specifies the end point of a line. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint pointB</Declaration>
			
			
			<Anchor>//api/name/pointB</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/pointB</TokenIdentifier>
			<Abstract type="html">Specifies the end point of a line. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint pointB</Declaration>
			
			
			<Anchor>//api/name/pointB</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setControlPointA:</TokenIdentifier>
			<Abstract type="html">Specifies the first control point of a curve, both bezier and quad curves. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint controlPointA</Declaration>
			
			
			<Anchor>//api/name/controlPointA</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/controlPointA</TokenIdentifier>
			<Abstract type="html">Specifies the first control point of a curve, both bezier and quad curves. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint controlPointA</Declaration>
			
			
			<Anchor>//api/name/controlPointA</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/controlPointA</TokenIdentifier>
			<Abstract type="html">Specifies the first control point of a curve, both bezier and quad curves. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint controlPointA</Declaration>
			
			
			<Anchor>//api/name/controlPointA</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setControlPointB:</TokenIdentifier>
			<Abstract type="html">Specifies the second control point (bezier curves only). Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint controlPointB</Declaration>
			
			
			<Anchor>//api/name/controlPointB</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/controlPointB</TokenIdentifier>
			<Abstract type="html">Specifies the second control point (bezier curves only). Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint controlPointB</Declaration>
			
			
			<Anchor>//api/name/controlPointB</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/controlPointB</TokenIdentifier>
			<Abstract type="html">Specifies the second control point (bezier curves only). Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPoint controlPointB</Declaration>
			
			
			<Anchor>//api/name/controlPointB</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setShapeLayer:</TokenIdentifier>
			<Abstract type="html">The shape&apos;s view backing layer.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, strong) C4ShapeLayer *shapeLayer</Declaration>
			
			
			<Anchor>//api/name/shapeLayer</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/shapeLayer</TokenIdentifier>
			<Abstract type="html">The shape&apos;s view backing layer.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, strong) C4ShapeLayer *shapeLayer</Declaration>
			
			
			<Anchor>//api/name/shapeLayer</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/shapeLayer</TokenIdentifier>
			<Abstract type="html">The shape&apos;s view backing layer.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, strong) C4ShapeLayer *shapeLayer</Declaration>
			
			
			<Anchor>//api/name/shapeLayer</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setClosed:</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is closed or not. This is useful for determining if polygons are open or closed.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isClosed) BOOL closed</Declaration>
			
			
			<Anchor>//api/name/closed</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/isClosed</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is closed or not. This is useful for determining if polygons are open or closed.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isClosed) BOOL closed</Declaration>
			
			
			<Anchor>//api/name/closed</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/closed</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is closed or not. This is useful for determining if polygons are open or closed.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isClosed) BOOL closed</Declaration>
			
			
			<Anchor>//api/name/closed</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setWedge:</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a wedge.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isWedge) BOOL wedge</Declaration>
			
			
			<Anchor>//api/name/wedge</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/isWedge</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a wedge.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isWedge) BOOL wedge</Declaration>
			
			
			<Anchor>//api/name/wedge</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/wedge</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a wedge.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isWedge) BOOL wedge</Declaration>
			
			
			<Anchor>//api/name/wedge</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setBezierCurve:</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a bezier curve.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isBezierCurve) BOOL bezierCurve</Declaration>
			
			
			<Anchor>//api/name/bezierCurve</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/isBezierCurve</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a bezier curve.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isBezierCurve) BOOL bezierCurve</Declaration>
			
			
			<Anchor>//api/name/bezierCurve</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/bezierCurve</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a bezier curve.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isBezierCurve) BOOL bezierCurve</Declaration>
			
			
			<Anchor>//api/name/bezierCurve</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setQuadCurve:</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a quadratic curve.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isQuadCurve) BOOL quadCurve</Declaration>
			
			
			<Anchor>//api/name/quadCurve</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/isQuadCurve</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a quadratic curve.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isQuadCurve) BOOL quadCurve</Declaration>
			
			
			<Anchor>//api/name/quadCurve</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/quadCurve</TokenIdentifier>
			<Abstract type="html">Specifies whether the given shape is a quadratic curve.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readonly, atomic, getter=isQuadCurve) BOOL quadCurve</Declaration>
			
			
			<Anchor>//api/name/quadCurve</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/setPath:</TokenIdentifier>
			<Abstract type="html">The path defining the shape to be rendered. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPathRef path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Shape/path</TokenIdentifier>
			<Abstract type="html">The path defining the shape to be rendered. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPathRef path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Shape/path</TokenIdentifier>
			<Abstract type="html">The path defining the shape to be rendered. Animatable.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGPathRef path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Shape/defaultStyle</TokenIdentifier>
			<Abstract type="html">Returns the appearance proxy for the object, cast as a C4Shape rather than the standard (id) cast provided by UIAppearance.</Abstract>
			<DeclaredIn>C4Shape.h</DeclaredIn>			
			
			<Declaration>+ (C4Shape *)defaultStyle</Declaration>
			
			<ReturnValue><Abstract type="html">The appearance proxy for the receiver, cast as a C4Shape.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultStyle</Anchor>
            <NodeRef refid="25"/>
		</Token>
		
	</File>
</Tokens>