<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/C4ActivityIndicator.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/C4ActivityIndicator</TokenIdentifier>
			<Abstract type="html">This document describes the C4ActivityIndicator class. Use an activity indicator to show that a task is in progress. An activity indicator appears as a “gear” that is either spinning or stopped.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4ActivityIndicator/indicatorWithStyle:</TokenIdentifier>
			<Abstract type="html">Creates, initializes and returns an activity-indicator object.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>+ (C4ActivityIndicator *)indicatorWithStyle:(C4ActivityIndicatorStyle)style</Declaration>
			<Parameters>
				<Parameter>
					<Name>style</Name>
					<Abstract type="html">A constant that specifies the style of the object to be created. The options are: WHITELARGE, WHITE, GRAY.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized C4ActivityIndicator object or nil if the object couldn’t be created.</Abstract></ReturnValue>
			<Anchor>//api/name/indicatorWithStyle:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/initWithActivityIndicatorStyle:</TokenIdentifier>
			<Abstract type="html">Initializes and returns an activity-indicator object.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>- (id)initWithActivityIndicatorStyle:(C4ActivityIndicatorStyle)style</Declaration>
			<Parameters>
				<Parameter>
					<Name>style</Name>
					<Abstract type="html">A constant that specifies the style of the object to be created. The options are: WHITELARGE, WHITE, GRAY.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized C4ActivityIndicator object or nil if the object couldn’t be created.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithActivityIndicatorStyle:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/startAnimating</TokenIdentifier>
			<Abstract type="html">Starts the animation of the progress indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>- (void)startAnimating</Declaration>
			
			
			<Anchor>//api/name/startAnimating</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/stopAnimating</TokenIdentifier>
			<Abstract type="html">Stops the animation of the progress indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>- (void)stopAnimating</Declaration>
			
			
			<Anchor>//api/name/stopAnimating</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/isAnimating</TokenIdentifier>
			<Abstract type="html">Returns whether the receiver is animating.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isAnimating</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the receiver is animating, otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/isAnimating</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/setUIActivityIndicatorView:</TokenIdentifier>
			<Abstract type="html">The embedded UIActivityIndicatorView.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) *UIActivityIndicatorView</Declaration>
			
			
			<Anchor>//api/name/UIActivityIndicatorView</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/UIActivityIndicatorView</TokenIdentifier>
			<Abstract type="html">The embedded UIActivityIndicatorView.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) *UIActivityIndicatorView</Declaration>
			
			
			<Anchor>//api/name/UIActivityIndicatorView</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4ActivityIndicator/UIActivityIndicatorView</TokenIdentifier>
			<Abstract type="html">The embedded UIActivityIndicatorView.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) *UIActivityIndicatorView</Declaration>
			
			
			<Anchor>//api/name/UIActivityIndicatorView</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/setActivityIndicatorStyle:</TokenIdentifier>
			<Abstract type="html">The basic appearance of the activity indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) C4ActivityIndicatorStyle activityIndicatorStyle</Declaration>
			
			
			<Anchor>//api/name/activityIndicatorStyle</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/activityIndicatorStyle</TokenIdentifier>
			<Abstract type="html">The basic appearance of the activity indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) C4ActivityIndicatorStyle activityIndicatorStyle</Declaration>
			
			
			<Anchor>//api/name/activityIndicatorStyle</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4ActivityIndicator/activityIndicatorStyle</TokenIdentifier>
			<Abstract type="html">The basic appearance of the activity indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) C4ActivityIndicatorStyle activityIndicatorStyle</Declaration>
			
			
			<Anchor>//api/name/activityIndicatorStyle</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/setHidesWhenStopped:</TokenIdentifier>
			<Abstract type="html">A Boolean value that controls whether the receiver is hidden when the animation is stopped.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) BOOL hidesWhenStopped</Declaration>
			
			
			<Anchor>//api/name/hidesWhenStopped</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/hidesWhenStopped</TokenIdentifier>
			<Abstract type="html">A Boolean value that controls whether the receiver is hidden when the animation is stopped.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) BOOL hidesWhenStopped</Declaration>
			
			
			<Anchor>//api/name/hidesWhenStopped</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4ActivityIndicator/hidesWhenStopped</TokenIdentifier>
			<Abstract type="html">A Boolean value that controls whether the receiver is hidden when the animation is stopped.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) BOOL hidesWhenStopped</Declaration>
			
			
			<Anchor>//api/name/hidesWhenStopped</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/setColor:</TokenIdentifier>
			<Abstract type="html">The color of the activity indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, strong) UIColor *color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4ActivityIndicator/color</TokenIdentifier>
			<Abstract type="html">The color of the activity indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, strong) UIColor *color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4ActivityIndicator/color</TokenIdentifier>
			<Abstract type="html">The color of the activity indicator.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, strong) UIColor *color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4ActivityIndicator/defaultStyle</TokenIdentifier>
			<Abstract type="html">Returns the appearance proxy for the button, cast as a C4ActivityIndicator rather than the standard (id) cast provided by UIAppearance.</Abstract>
			<DeclaredIn>C4ActivityIndicator.h</DeclaredIn>			
			
			<Declaration>+ (C4ActivityIndicator *)defaultStyle</Declaration>
			
			<ReturnValue><Abstract type="html">The appearance proxy for the receiver, cast as a C4ActivityIndicator.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultStyle</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
	</File>
</Tokens>