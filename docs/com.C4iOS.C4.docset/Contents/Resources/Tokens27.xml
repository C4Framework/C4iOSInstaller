<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/C4Slider.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/C4Slider</TokenIdentifier>
			<Abstract type="html">This document describes the C4Slider class. An instance of the C4Slider class implements a slider on the touch screen. A slider intercepts touch events and sends an action message to a target object when its value has changed, or for other touch events.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>
			
			<NodeRef refid="27"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Slider/slider:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new slider object fit inside the given frame.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>+ (C4Slider *)slider:(CGRect)rect</Declaration>
			<Parameters>
				<Parameter>
					<Name>rect</Name>
					<Abstract type="html">a CGRect structure used to construct the slider&apos;s view.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a new C4Slider object.</Abstract></ReturnValue>
			<Anchor>//api/name/slider:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/initWithFrame:defaults:</TokenIdentifier>
			<Abstract type="html">Initializes and returns a new slider object fit inside the given frame.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (id)initWithFrame:(CGRect)frame defaults:(BOOL)useDefaults</Declaration>
			<Parameters>
				<Parameter>
					<Name>frame</Name>
					<Abstract type="html">a CGRect structure used to construct the slider&apos;s view.</Abstract>
				</Parameter><Parameter>
					<Name>useDefaults</Name>
					<Abstract type="html">a boolean flag that allows the slider to be constructed with C4 default style. YES to use the default C4 images and colors, NO to use default UISlider style.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a new C4Slider object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithFrame:defaults:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setValue:</TokenIdentifier>
			<Abstract type="html">Contains the receiver’s current value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/value</TokenIdentifier>
			<Abstract type="html">Contains the receiver’s current value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/value</TokenIdentifier>
			<Abstract type="html">Contains the receiver’s current value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setValue:animated:</TokenIdentifier>
			<Abstract type="html">Sets the receiver’s current value, allowing you to animate the change visually.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (void)setValue:(CGFloat)value animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">The new value to assign to the value property</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">Specify YES to animate the change in value when the receiver is redrawn; otherwise, specify NO to draw the receiver with the new value only. Animations are performed asynchronously and do not block the calling thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setValue:animated:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setMinimumValue:</TokenIdentifier>
			<Abstract type="html">Contains the minimum value of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat minimumValue</Declaration>
			
			
			<Anchor>//api/name/minimumValue</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/minimumValue</TokenIdentifier>
			<Abstract type="html">Contains the minimum value of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat minimumValue</Declaration>
			
			
			<Anchor>//api/name/minimumValue</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/minimumValue</TokenIdentifier>
			<Abstract type="html">Contains the minimum value of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat minimumValue</Declaration>
			
			
			<Anchor>//api/name/minimumValue</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setMaximumValue:</TokenIdentifier>
			<Abstract type="html">Contains the maximum value of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat maximumValue</Declaration>
			
			
			<Anchor>//api/name/maximumValue</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/maximumValue</TokenIdentifier>
			<Abstract type="html">Contains the maximum value of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat maximumValue</Declaration>
			
			
			<Anchor>//api/name/maximumValue</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/maximumValue</TokenIdentifier>
			<Abstract type="html">Contains the maximum value of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic) CGFloat maximumValue</Declaration>
			
			
			<Anchor>//api/name/maximumValue</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setContinuous:</TokenIdentifier>
			<Abstract type="html">Contains a Boolean value indicating whether changes in the sliders value generate continuous update events.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, getter=isContinuous) BOOL continuous</Declaration>
			
			
			<Anchor>//api/name/continuous</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/isContinuous</TokenIdentifier>
			<Abstract type="html">Contains a Boolean value indicating whether changes in the sliders value generate continuous update events.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, getter=isContinuous) BOOL continuous</Declaration>
			
			
			<Anchor>//api/name/continuous</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/continuous</TokenIdentifier>
			<Abstract type="html">Contains a Boolean value indicating whether changes in the sliders value generate continuous update events.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, getter=isContinuous) BOOL continuous</Declaration>
			
			
			<Anchor>//api/name/continuous</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setMinimumValueImage:</TokenIdentifier>
			<Abstract type="html">Contains the image that is drawn on the side of the slider representing the minimum value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) C4Image *minimumValueImage</Declaration>
			
			
			<Anchor>//api/name/minimumValueImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/minimumValueImage</TokenIdentifier>
			<Abstract type="html">Contains the image that is drawn on the side of the slider representing the minimum value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) C4Image *minimumValueImage</Declaration>
			
			
			<Anchor>//api/name/minimumValueImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/minimumValueImage</TokenIdentifier>
			<Abstract type="html">Contains the image that is drawn on the side of the slider representing the minimum value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) C4Image *minimumValueImage</Declaration>
			
			
			<Anchor>//api/name/minimumValueImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setMaximumValueImage:</TokenIdentifier>
			<Abstract type="html">Contains the image that is drawn on the side of the slider representing the maximum value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) C4Image *maximumValueImage</Declaration>
			
			
			<Anchor>//api/name/maximumValueImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/maximumValueImage</TokenIdentifier>
			<Abstract type="html">Contains the image that is drawn on the side of the slider representing the maximum value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) C4Image *maximumValueImage</Declaration>
			
			
			<Anchor>//api/name/maximumValueImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/maximumValueImage</TokenIdentifier>
			<Abstract type="html">Contains the image that is drawn on the side of the slider representing the maximum value.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) C4Image *maximumValueImage</Declaration>
			
			
			<Anchor>//api/name/maximumValueImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setCurrentMinimumTrackImage:</TokenIdentifier>
			<Abstract type="html">Contains the minimum track image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentMinimumTrackImage</Declaration>
			
			
			<Anchor>//api/name/currentMinimumTrackImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/currentMinimumTrackImage</TokenIdentifier>
			<Abstract type="html">Contains the minimum track image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentMinimumTrackImage</Declaration>
			
			
			<Anchor>//api/name/currentMinimumTrackImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/currentMinimumTrackImage</TokenIdentifier>
			<Abstract type="html">Contains the minimum track image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentMinimumTrackImage</Declaration>
			
			
			<Anchor>//api/name/currentMinimumTrackImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/minimumTrackImageForState:</TokenIdentifier>
			<Abstract type="html">Returns the minimum track image associated with the specified control state.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (C4Image *)minimumTrackImageForState:(C4ControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state whose minimum track image you want (one of: DISABLED, NORMAL, HIGHLIGHTED, SELECTED). You should specify only one control state value for this parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A C4Image. The minimum track image associated with the specified state, or nil if no image has been set. This method might also return nil if you specify multiple control states in the state parameter. For a description of track images, see “Customizing the Slider’s Appearance.”</Abstract></ReturnValue>
			<Anchor>//api/name/minimumTrackImageForState:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setMinimumTrackImage:forState:</TokenIdentifier>
			<Abstract type="html">Assigns a minimum track image to the specified control states.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (void)setMinimumTrackImage:(C4Image *)image forState:(C4ControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">The minimum track image to associate with the specified states.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state with which to associate the image (one of: DISABLED, NORMAL, HIGHLIGHTED, SELECTED).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setMinimumTrackImage:forState:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setMaximumTrackTintColor:</TokenIdentifier>
			<Abstract type="html">The color used to tint the standard maximum track images.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, weak) UIColor *maximumTrackTintColor</Declaration>
			
			
			<Anchor>//api/name/maximumTrackTintColor</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/maximumTrackTintColor</TokenIdentifier>
			<Abstract type="html">The color used to tint the standard maximum track images.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, weak) UIColor *maximumTrackTintColor</Declaration>
			
			
			<Anchor>//api/name/maximumTrackTintColor</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/maximumTrackTintColor</TokenIdentifier>
			<Abstract type="html">The color used to tint the standard maximum track images.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, weak) UIColor *maximumTrackTintColor</Declaration>
			
			
			<Anchor>//api/name/maximumTrackTintColor</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setCurrentMaximumTrackImage:</TokenIdentifier>
			<Abstract type="html">Contains the maximum track image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentMaximumTrackImage</Declaration>
			
			
			<Anchor>//api/name/currentMaximumTrackImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/currentMaximumTrackImage</TokenIdentifier>
			<Abstract type="html">Contains the maximum track image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentMaximumTrackImage</Declaration>
			
			
			<Anchor>//api/name/currentMaximumTrackImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/currentMaximumTrackImage</TokenIdentifier>
			<Abstract type="html">Contains the maximum track image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentMaximumTrackImage</Declaration>
			
			
			<Anchor>//api/name/currentMaximumTrackImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/maximumTrackImageForState:</TokenIdentifier>
			<Abstract type="html">Returns the maximum track image associated with the specified control state.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (C4Image *)maximumTrackImageForState:(C4ControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state whose maximum track image you want (one of: DISABLED, NORMAL, HIGHLIGHTED, SELECTED). You should specify only one control state value for this parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A C4Image. The maximum track image associated with the specified state, or nil if an appropriate image could not be retrieved. This method might return nil if you specify multiple control states in the state parameter.</Abstract></ReturnValue>
			<Anchor>//api/name/maximumTrackImageForState:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setMaximumTrackImage:forState:</TokenIdentifier>
			<Abstract type="html">Assigns a maximum track image to the specified control states.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (void)setMaximumTrackImage:(C4Image *)image forState:(C4ControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">The maximum track image to associate with the specified states.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state with which to associate the image (one of: DISABLED, NORMAL, HIGHLIGHTED, SELECTED).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setMaximumTrackImage:forState:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setThumbTintColor:</TokenIdentifier>
			<Abstract type="html">The color used to tint the standard thumb images.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, weak) UIColor *thumbTintColor</Declaration>
			
			
			<Anchor>//api/name/thumbTintColor</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/thumbTintColor</TokenIdentifier>
			<Abstract type="html">The color used to tint the standard thumb images.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, weak) UIColor *thumbTintColor</Declaration>
			
			
			<Anchor>//api/name/thumbTintColor</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/thumbTintColor</TokenIdentifier>
			<Abstract type="html">The color used to tint the standard thumb images.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, weak) UIColor *thumbTintColor</Declaration>
			
			
			<Anchor>//api/name/thumbTintColor</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setCurrentThumbImage:</TokenIdentifier>
			<Abstract type="html">Contains the thumb image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentThumbImage</Declaration>
			
			
			<Anchor>//api/name/currentThumbImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/currentThumbImage</TokenIdentifier>
			<Abstract type="html">Contains the thumb image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentThumbImage</Declaration>
			
			
			<Anchor>//api/name/currentThumbImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/currentThumbImage</TokenIdentifier>
			<Abstract type="html">Contains the thumb image currently being used to render the receiver. (read-only)</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) C4Image *currentThumbImage</Declaration>
			
			
			<Anchor>//api/name/currentThumbImage</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/thumbImageForState:</TokenIdentifier>
			<Abstract type="html">Returns the thumb image associated with the specified control state.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (C4Image *)thumbImageForState:(C4ControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state whose thumb image you want (one of: DISABLED, NORMAL, HIGHLIGHTED, SELECTED). You should specify only one control state value for this parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The thumb image associated with the specified state, or nil if an appropriate image could not be retrieved. This method might return nil if you specify multiple control states in the state parameter.</Abstract></ReturnValue>
			<Anchor>//api/name/thumbImageForState:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setThumbImage:forState:</TokenIdentifier>
			<Abstract type="html">Assigns a thumb image to the specified control states.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>- (void)setThumbImage:(C4Image *)image forState:(C4ControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">The thumb image to associate with the specified states.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The control state with which to associate the image (one of: DISABLED, NORMAL, HIGHLIGHTED, SELECTED).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setThumbImage:forState:</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/setUISlider:</TokenIdentifier>
			<Abstract type="html">The UISlider object which is the primary subview of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) *UISlider</Declaration>
			
			
			<Anchor>//api/name/UISlider</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/C4Slider/UISlider</TokenIdentifier>
			<Abstract type="html">The UISlider object which is the primary subview of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) *UISlider</Declaration>
			
			
			<Anchor>//api/name/UISlider</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/C4Slider/UISlider</TokenIdentifier>
			<Abstract type="html">The UISlider object which is the primary subview of the receiver.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) *UISlider</Declaration>
			
			
			<Anchor>//api/name/UISlider</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/C4Slider/defaultStyle</TokenIdentifier>
			<Abstract type="html">Returns the appearance proxy for the object, cast as a C4Slider rather than the standard (id) cast provided by UIAppearance.</Abstract>
			<DeclaredIn>C4Slider.h</DeclaredIn>			
			
			<Declaration>+ (C4Slider *)defaultStyle</Declaration>
			
			<ReturnValue><Abstract type="html">The appearance proxy for the receiver, cast as a C4Slider.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultStyle</Anchor>
            <NodeRef refid="27"/>
		</Token>
		
	</File>
</Tokens>